{
    "project": {},
    "files": {
        "js/vendor/hidpi-canvas.min.js": {
            "name": "js/vendor/hidpi-canvas.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/vendor/rot.js": {
            "name": "js/vendor/rot.js",
            "modules": {},
            "classes": {
                "Contains text tokenization and breaking routines.Visual map display": 1,
                "Contains text tokenization and breaking routines.Abstract display backend module": 1,
                "Contains text tokenization and breaking routines.Rectangular backend": 1,
                "Contains text tokenization and breaking routines.Hexagonal backend": 1,
                "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Tile backend": 1,
                "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..(Markov process)-based string generator. \nCopied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>. \nOffers configurable order and prior.": 1,
                "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Generic event queue: stores events and retrieves them based on their time": 1,
                "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Abstract scheduler": 1,
                "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Simple fair scheduler (round-robin style)": 1,
                "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Speed-based scheduler": 1,
                "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Action-based scheduler": 1,
                "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Asynchronous main loop": 1,
                "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Base map generator": 1,
                "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Simple empty rectangular room": 1,
                "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method": 1,
                "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Icey's Maze generator\nSee http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation": 1,
                "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Maze generator - Eller's algorithm\nSee http://homepages.cwi.nl/~tromp/maze.html for explanation": 1,
                "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Cellular automaton map generator": 1,
                "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Dungeon map: has rooms and corridors": 1,
                "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Random dungeon generator using human-like digging patterns.\nHeavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at \nhttp://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.": 1,
                "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.": 1,
                "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php": 1,
                "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Dungeon feature; has own .create() method": 1,
                "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Room": 1,
                "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Corridor": 1,
                "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..2D simplex noise generator": 1,
                "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Abstract FOV algorithm": 1,
                "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.": 1,
                "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Precise shadowcasting algorithm": 1,
                "Color operations.Recursive shadowcasting algorithm\nCurrently only supports 4/8 topologies, not hexagonal.\nBased on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting": 1,
                "Color operations.Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.": 1,
                "Color operations.Abstract pathfinder": 1,
                "Color operations.Simplified Dijkstra's algorithm: all edges have a value of 1": 1,
                "Color operations.Simplified A* algorithm: all edges have a value of 1": 1
            },
            "fors": {},
            "namespaces": {
                "Top-level ROT namespace": 1,
                "Contains text tokenization and breaking routines": 1,
                "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.": 1,
                "Color operations": 1
            }
        },
        "js/array-2d.js": {
            "name": "js/array-2d.js",
            "modules": {},
            "classes": {
                "Color operations.Array2d": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/console.js": {
            "name": "js/console.js",
            "modules": {},
            "classes": {
                "Color operations.Console": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/entity-manager.js": {
            "name": "js/entity-manager.js",
            "modules": {},
            "classes": {
                "Color operations.EntityManager": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/entity.js": {
            "name": "js/entity.js",
            "modules": {},
            "classes": {
                "Color operations.Entity": 1,
                "Color operations.Entity.Types": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/fov.js": {
            "name": "js/fov.js",
            "modules": {},
            "classes": {
                "Color operations.Fov": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/game.js": {
            "name": "js/game.js",
            "modules": {},
            "classes": {
                "Color operations.Game": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/input.js": {
            "name": "js/input.js",
            "modules": {},
            "classes": {
                "Color operations.Input": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/lighting.js": {
            "name": "js/lighting.js",
            "modules": {},
            "classes": {
                "Color operations.Lighting": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/mouse.js": {
            "name": "js/mouse.js",
            "modules": {},
            "classes": {
                "Color operations.Mouse": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/player.js": {
            "name": "js/player.js",
            "modules": {},
            "classes": {
                "Color operations.Player": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/renderer.js": {
            "name": "js/renderer.js",
            "modules": {},
            "classes": {
                "Color operations.Renderer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/tile.js": {
            "name": "js/tile.js",
            "modules": {},
            "classes": {
                "Color operations.Tile": 1,
                "Color operations.Tile.Types": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/util.js": {
            "name": "js/util.js",
            "modules": {},
            "classes": {
                "Color operations.Util": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Contains text tokenization and breaking routines.Visual map display": {
            "name": "Contains text tokenization and breaking routines.Visual map display",
            "shortname": "Visual map display",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Contains text tokenization and breaking routines",
            "file": "js/vendor/rot.js",
            "line": 695,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "width",
                            "description": "",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "ROT.DEFAULT_WIDTH"
                        },
                        {
                            "name": "height",
                            "description": "",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "ROT.DEFAULT_HEIGHT"
                        },
                        {
                            "name": "fontSize",
                            "description": "",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "15"
                        },
                        {
                            "name": "fontFamily",
                            "description": "",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"monospace\""
                        },
                        {
                            "name": "fontStyle",
                            "description": "bold/italic/none/both",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"\""
                        },
                        {
                            "name": "fg",
                            "description": "",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"#ccc\""
                        },
                        {
                            "name": "bg",
                            "description": "",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"#000\""
                        },
                        {
                            "name": "spacing",
                            "description": "",
                            "type": "Float",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "border",
                            "description": "",
                            "type": "Float",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "layout",
                            "description": "",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"rect\""
                        },
                        {
                            "name": "tileWidth",
                            "description": "",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "32"
                        },
                        {
                            "name": "tileHeight",
                            "description": "",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "32"
                        },
                        {
                            "name": "tileMap",
                            "description": "",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "{}"
                        },
                        {
                            "name": "tileSet",
                            "description": "",
                            "type": "Image",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                }
            ]
        },
        "Contains text tokenization and breaking routines.Abstract display backend module": {
            "name": "Contains text tokenization and breaking routines.Abstract display backend module",
            "shortname": "Abstract display backend module",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Contains text tokenization and breaking routines",
            "file": "js/vendor/rot.js",
            "line": 942,
            "access": "private",
            "tagname": ""
        },
        "Contains text tokenization and breaking routines.Rectangular backend": {
            "name": "Contains text tokenization and breaking routines.Rectangular backend",
            "shortname": "Rectangular backend",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Contains text tokenization and breaking routines",
            "file": "js/vendor/rot.js",
            "line": 964,
            "access": "private",
            "tagname": ""
        },
        "Contains text tokenization and breaking routines.Hexagonal backend": {
            "name": "Contains text tokenization and breaking routines.Hexagonal backend",
            "shortname": "Hexagonal backend",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Contains text tokenization and breaking routines",
            "file": "js/vendor/rot.js",
            "line": 1085,
            "access": "private",
            "tagname": ""
        },
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Tile backend": {
            "name": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Tile backend",
            "shortname": "Tile backend",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.",
            "file": "js/vendor/rot.js",
            "line": 1190,
            "access": "private",
            "tagname": ""
        },
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..(Markov process)-based string generator. \nCopied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>. \nOffers configurable order and prior.": {
            "name": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..(Markov process)-based string generator. \nCopied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>. \nOffers configurable order and prior.",
            "shortname": "(Markov process)-based string generator. \nCopied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>. \nOffers configurable order and prior.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.",
            "file": "js/vendor/rot.js",
            "line": 1377,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "words",
                            "description": "Use word mode?",
                            "type": "Bool",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "order",
                            "description": "",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "3"
                        },
                        {
                            "name": "prior",
                            "description": "",
                            "type": "Float",
                            "optional": true,
                            "optdefault": "0.001"
                        }
                    ]
                }
            ]
        },
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Generic event queue: stores events and retrieves them based on their time": {
            "name": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Generic event queue: stores events and retrieves them based on their time",
            "shortname": "Generic event queue: stores events and retrieves them based on their time",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.",
            "file": "js/vendor/rot.js",
            "line": 1549
        },
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Abstract scheduler": {
            "name": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Abstract scheduler",
            "shortname": "Abstract scheduler",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.",
            "file": "js/vendor/rot.js",
            "line": 1627
        },
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Simple fair scheduler (round-robin style)": {
            "name": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Simple fair scheduler (round-robin style)",
            "shortname": "Simple fair scheduler (round-robin style)",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.",
            "file": "js/vendor/rot.js",
            "line": 1686,
            "uses": [
                "ROT.Scheduler"
            ]
        },
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Speed-based scheduler": {
            "name": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Speed-based scheduler",
            "shortname": "Speed-based scheduler",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.",
            "file": "js/vendor/rot.js",
            "line": 1712,
            "uses": [
                "ROT.Scheduler"
            ]
        },
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Action-based scheduler": {
            "name": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Action-based scheduler",
            "shortname": "Action-based scheduler",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.",
            "file": "js/vendor/rot.js",
            "line": 1740,
            "uses": [
                "ROT.Scheduler"
            ]
        },
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Asynchronous main loop": {
            "name": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Asynchronous main loop",
            "shortname": "Asynchronous main loop",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.",
            "file": "js/vendor/rot.js",
            "line": 1790,
            "params": [
                {
                    "name": "scheduler",
                    "description": "",
                    "type": "ROT.Scheduler"
                }
            ]
        },
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Base map generator": {
            "name": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Base map generator",
            "shortname": "Base map generator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.",
            "file": "js/vendor/rot.js",
            "line": 1833,
            "params": [
                {
                    "name": "width",
                    "description": "",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "ROT.DEFAULT_WIDTH"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "ROT.DEFAULT_HEIGHT"
                }
            ]
        },
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Simple empty rectangular room": {
            "name": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Simple empty rectangular room",
            "shortname": "Simple empty rectangular room",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.",
            "file": "js/vendor/rot.js",
            "line": 1853,
            "uses": [
                "ROT.Map"
            ]
        },
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method": {
            "name": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method",
            "shortname": "Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.",
            "file": "js/vendor/rot.js",
            "line": 1873,
            "uses": [
                "ROT.Map"
            ]
        },
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Icey's Maze generator\nSee http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation": {
            "name": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Icey's Maze generator\nSee http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation",
            "shortname": "Icey's Maze generator\nSee http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.",
            "file": "js/vendor/rot.js",
            "line": 1981,
            "uses": [
                "ROT.Map"
            ]
        },
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Maze generator - Eller's algorithm\nSee http://homepages.cwi.nl/~tromp/maze.html for explanation": {
            "name": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Maze generator - Eller's algorithm\nSee http://homepages.cwi.nl/~tromp/maze.html for explanation",
            "shortname": "Maze generator - Eller's algorithm\nSee http://homepages.cwi.nl/~tromp/maze.html for explanation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.",
            "file": "js/vendor/rot.js",
            "line": 2082,
            "uses": [
                "ROT.Map"
            ]
        },
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Cellular automaton map generator": {
            "name": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Cellular automaton map generator",
            "shortname": "Cellular automaton map generator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.",
            "file": "js/vendor/rot.js",
            "line": 2177,
            "uses": [
                "ROT.Map"
            ],
            "params": [
                {
                    "name": "width",
                    "description": "",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "ROT.DEFAULT_WIDTH"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "ROT.DEFAULT_HEIGHT"
                },
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "born",
                            "description": "List of neighbor counts for a new cell to be born in empty space",
                            "type": "Int[]",
                            "optional": true
                        },
                        {
                            "name": "survive",
                            "description": "List of neighbor counts for an existing  cell to survive",
                            "type": "Int[]",
                            "optional": true
                        },
                        {
                            "name": "topology",
                            "description": "Topology 4 or 6 or 8",
                            "type": "Int",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Dungeon map: has rooms and corridors": {
            "name": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Dungeon map: has rooms and corridors",
            "shortname": "Dungeon map: has rooms and corridors",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.",
            "file": "js/vendor/rot.js",
            "line": 2446,
            "uses": [
                "ROT.Map"
            ]
        },
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Random dungeon generator using human-like digging patterns.\nHeavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at \nhttp://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.": {
            "name": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Random dungeon generator using human-like digging patterns.\nHeavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at \nhttp://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.",
            "shortname": "Random dungeon generator using human-like digging patterns.\nHeavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at \nhttp://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.",
            "file": "js/vendor/rot.js",
            "line": 2472,
            "uses": [
                "ROT.Map.Dungeon"
            ]
        },
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.": {
            "name": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.",
            "shortname": "Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.",
            "file": "js/vendor/rot.js",
            "line": 2706,
            "uses": [
                "ROT.Map.Dungeon"
            ]
        },
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php": {
            "name": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php",
            "shortname": "Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.",
            "file": "js/vendor/rot.js",
            "line": 3037,
            "author": "hyakugei",
            "uses": [
                "ROT.Map"
            ],
            "params": [
                {
                    "name": "width",
                    "description": "",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "ROT.DEFAULT_WIDTH"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "ROT.DEFAULT_HEIGHT"
                },
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "cellWidth",
                            "description": "Number of cells to create on the horizontal (number of rooms horizontally)",
                            "type": "Int[]",
                            "optional": true,
                            "optdefault": "3"
                        },
                        {
                            "name": "cellHeight",
                            "description": "Number of cells to create on the vertical (number of rooms vertically)",
                            "type": "Int[]",
                            "optional": true,
                            "optdefault": "3"
                        },
                        {
                            "name": "roomWidth",
                            "description": "Room min and max width - normally set auto-magically via the constructor.",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "roomHeight",
                            "description": "Room min and max height - normally set auto-magically via the constructor.",
                            "type": "Int",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Dungeon feature; has own .create() method": {
            "name": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Dungeon feature; has own .create() method",
            "shortname": "Dungeon feature; has own .create() method",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.",
            "file": "js/vendor/rot.js",
            "line": 3471
        },
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Room": {
            "name": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Room",
            "shortname": "Room",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.",
            "file": "js/vendor/rot.js",
            "line": 3480,
            "uses": [
                "ROT.Map.Feature"
            ],
            "params": [
                {
                    "name": "x1",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "y1",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "x2",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "y2",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "doorX",
                    "description": "",
                    "type": "Int",
                    "optional": true
                },
                {
                    "name": "doorY",
                    "description": "",
                    "type": "Int",
                    "optional": true
                }
            ]
        },
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Corridor": {
            "name": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Corridor",
            "shortname": "Corridor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.",
            "file": "js/vendor/rot.js",
            "line": 3682,
            "uses": [
                "ROT.Map.Feature"
            ],
            "params": [
                {
                    "name": "startX",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "startY",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "endX",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "endY",
                    "description": "",
                    "type": "Int"
                }
            ]
        },
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..2D simplex noise generator": {
            "name": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..2D simplex noise generator",
            "shortname": "2D simplex noise generator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.",
            "file": "js/vendor/rot.js",
            "line": 3826,
            "params": [
                {
                    "name": "gradients",
                    "description": "Random gradients",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "256"
                }
            ]
        },
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Abstract FOV algorithm": {
            "name": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Abstract FOV algorithm",
            "shortname": "Abstract FOV algorithm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.",
            "file": "js/vendor/rot.js",
            "line": 3933,
            "params": [
                {
                    "name": "lightPassesCallback",
                    "description": "Does the light pass through x,y?",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "topology",
                            "description": "4/6/8",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "8"
                        }
                    ]
                }
            ]
        },
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.": {
            "name": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.",
            "shortname": "Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.",
            "file": "js/vendor/rot.js",
            "line": 4007,
            "uses": [
                "ROT.FOV"
            ]
        },
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Precise shadowcasting algorithm": {
            "name": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Precise shadowcasting algorithm",
            "shortname": "Precise shadowcasting algorithm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.",
            "file": "js/vendor/rot.js",
            "line": 4115,
            "uses": [
                "ROT.FOV"
            ]
        },
        "Color operations.Recursive shadowcasting algorithm\nCurrently only supports 4/8 topologies, not hexagonal.\nBased on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting": {
            "name": "Color operations.Recursive shadowcasting algorithm\nCurrently only supports 4/8 topologies, not hexagonal.\nBased on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting",
            "shortname": "Recursive shadowcasting algorithm\nCurrently only supports 4/8 topologies, not hexagonal.\nBased on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Color operations",
            "file": "js/vendor/rot.js",
            "line": 4238,
            "uses": [
                "ROT.FOV"
            ]
        },
        "Color operations.Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.": {
            "name": "Color operations.Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.",
            "shortname": "Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Color operations",
            "file": "js/vendor/rot.js",
            "line": 4769,
            "params": [
                {
                    "name": "reflectivityCallback",
                    "description": "Callback to retrieve cell reflectivity (0..1)",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "passes",
                            "description": "Number of passes. 1 equals to simple FOV of all light sources, >1 means a *highly simplified* radiosity-like algorithm.",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "emissionThreshold",
                            "description": "Cells with emissivity > threshold will be treated as light source in the next pass.",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "100"
                        },
                        {
                            "name": "range",
                            "description": "Max light range",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "10"
                        }
                    ]
                }
            ]
        },
        "Color operations.Abstract pathfinder": {
            "name": "Color operations.Abstract pathfinder",
            "shortname": "Abstract pathfinder",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Color operations",
            "file": "js/vendor/rot.js",
            "line": 4982,
            "params": [
                {
                    "name": "toX",
                    "description": "Target X coord",
                    "type": "Int"
                },
                {
                    "name": "toY",
                    "description": "Target Y coord",
                    "type": "Int"
                },
                {
                    "name": "passableCallback",
                    "description": "Callback to determine map passability",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "topology",
                            "description": "",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "8"
                        }
                    ]
                }
            ]
        },
        "Color operations.Simplified Dijkstra's algorithm: all edges have a value of 1": {
            "name": "Color operations.Simplified Dijkstra's algorithm: all edges have a value of 1",
            "shortname": "Simplified Dijkstra's algorithm: all edges have a value of 1",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Color operations",
            "file": "js/vendor/rot.js",
            "line": 5038,
            "uses": [
                "ROT.Path"
            ],
            "see": [
                "ROT.Path"
            ]
        },
        "Color operations.Simplified A* algorithm: all edges have a value of 1": {
            "name": "Color operations.Simplified A* algorithm: all edges have a value of 1",
            "shortname": "Simplified A* algorithm: all edges have a value of 1",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Color operations",
            "file": "js/vendor/rot.js",
            "line": 5098,
            "uses": [
                "ROT.Path"
            ],
            "see": [
                "ROT.Path"
            ]
        },
        "Color operations.Array2d": {
            "name": "Color operations.Array2d",
            "shortname": "Array2d",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Color operations",
            "file": "js/array-2d.js",
            "line": 4,
            "description": "Manages a 2d array of x,y coords.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "width",
                    "description": "- Width of the 2d Array.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "- Height of the 2d Array.",
                    "type": "Number"
                }
            ]
        },
        "Color operations.Console": {
            "name": "Color operations.Console",
            "shortname": "Console",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Color operations",
            "file": "js/console.js",
            "line": 3,
            "description": "Manages the display and history of console messages to the user.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "- Game instance this obj is attached to.",
                    "type": "Game"
                },
                {
                    "name": "messageHistoryCount",
                    "description": "- Number of messages to display at once.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "5"
                },
                {
                    "name": "elClassName",
                    "description": "- Css class name to assign to the console element.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'console'"
                }
            ]
        },
        "Color operations.EntityManager": {
            "name": "Color operations.EntityManager",
            "shortname": "EntityManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Color operations",
            "file": "js/entity-manager.js",
            "line": 4,
            "description": "Manages the current state of all entities.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "- Game instance this obj is attached to.",
                    "type": "Game"
                },
                {
                    "name": "width",
                    "description": "- Width of current map in tiles.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "- Height of current map in tiles.",
                    "type": "Number"
                }
            ]
        },
        "Color operations.Entity": {
            "name": "Color operations.Entity",
            "shortname": "Entity",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Color operations",
            "file": "js/entity.js",
            "line": 4,
            "description": "Represents an entity in the game. Usually a character or enemy.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "- Game instance this obj is attached to.",
                    "type": "Game"
                },
                {
                    "name": "type",
                    "description": "- Type of entity. When created this object is merged with the value of Entity.Types[type].",
                    "type": "String"
                }
            ]
        },
        "Color operations.Entity.Types": {
            "name": "Color operations.Entity.Types",
            "shortname": "Entity.Types",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Color operations",
            "file": "js/entity.js",
            "line": 147,
            "description": "Describes different types of entities. Used by the Entity constructor 'type' param.\n\n    Entity.Types = {\n        zombie: {\n           name: 'Zombie',\n           char: 'z',\n           color: 'red',\n           bgColor: '#222',\n           pushable: false\n        },\n        // ...\n    }",
            "static": 1
        },
        "Color operations.Fov": {
            "name": "Color operations.Fov",
            "shortname": "Fov",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Color operations",
            "file": "js/fov.js",
            "line": 4,
            "description": "Represents a Fov in the game map. requires ROT.js",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "- Game instance this obj is attached to.",
                    "type": "Object"
                }
            ]
        },
        "Color operations.Game": {
            "name": "Color operations.Game",
            "shortname": "Game",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Color operations",
            "file": "js/game.js",
            "line": 4,
            "description": "Represents the game.",
            "is_constructor": 1
        },
        "Color operations.Input": {
            "name": "Color operations.Input",
            "shortname": "Input",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Color operations",
            "file": "js/input.js",
            "line": 4,
            "description": "Helper for binding user key input to actions.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "onKeyAction",
                    "description": "- Function called when a key bound to an action is pressed (function(action){}).",
                    "type": "Function"
                },
                {
                    "name": "bindings",
                    "description": "- An object of key val pairs mapping an action to an array of keys that trigger it. Input.Keys is used to convert input key string names to key codes.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "action1",
                            "description": "Input keys mapped to action1. ['A', 'B', ...]",
                            "type": "Array"
                        },
                        {
                            "name": "action2",
                            "description": "Input keys mapped to action2. ['X', 'Y', ...]",
                            "type": "Array"
                        },
                        {
                            "name": "...",
                            "description": ""
                        }
                    ]
                }
            ],
            "example": [
                "\n       //bindings param example:\n       {\n           up: ['UP_ARROW'],\n           down: ['DOWN_ARROW'],\n           left: ['LEFT_ARROW'],\n           right: ['RIGHT_ARROW'],\n       }"
            ]
        },
        "Color operations.Lighting": {
            "name": "Color operations.Lighting",
            "shortname": "Lighting",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Color operations",
            "file": "js/lighting.js",
            "line": 4,
            "description": "Represents lighting in the game map. requires ROT.js",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "- Game instance this obj is attached to.",
                    "type": "Game"
                },
                {
                    "name": "settings",
                    "description": "Lighting settings object.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "range",
                            "description": "- Maximum range for the most powerful light source.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "passes",
                            "description": "- Number of computation passes (1: no reflectivity used, 2: reflectivity used)",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "emissionThreshold",
                            "description": "- Minimal amount of light at a cell to be re-emited (only for passes>1).",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Color operations.Mouse": {
            "name": "Color operations.Mouse",
            "shortname": "Mouse",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Color operations",
            "file": "js/mouse.js",
            "line": 4,
            "description": "Helper for handling user mouse input.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "- game instance this obj is attached to.",
                    "type": "Game"
                },
                {
                    "name": "onTileClick",
                    "description": "- A function to handle tile mouse click events. function(tile){}",
                    "type": "Function",
                    "props": [
                        {
                            "name": "tile",
                            "description": "Tile object clicked.",
                            "type": "Tile"
                        }
                    ]
                },
                {
                    "name": "onTileHover",
                    "description": "- A function to handle tile mouse hover events. function(tile){}",
                    "type": "Function",
                    "props": [
                        {
                            "name": "tile",
                            "description": "Tile object hovered.",
                            "type": "Tile"
                        }
                    ]
                }
            ]
        },
        "Color operations.Player": {
            "name": "Color operations.Player",
            "shortname": "Player",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Color operations",
            "file": "js/player.js",
            "line": 4,
            "description": "Represents the player.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "- game instance this obj is attached to",
                    "type": "Game"
                }
            ]
        },
        "Color operations.Renderer": {
            "name": "Color operations.Renderer",
            "shortname": "Renderer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Color operations",
            "file": "js/renderer.js",
            "line": 4,
            "description": "Responsible for rendering the state of the game map.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "- Game instance this obj is attached to.",
                    "type": "Game"
                },
                {
                    "name": "width",
                    "description": "- Width of the map view in tiles.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "- Height of the map view in tiles.",
                    "type": "Number"
                },
                {
                    "name": "canvasClassName",
                    "description": "- Css class name for the canvas element.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'renderer'"
                }
            ]
        },
        "Color operations.Tile": {
            "name": "Color operations.Tile",
            "shortname": "Tile",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Color operations",
            "file": "js/tile.js",
            "line": 4,
            "description": "Represents a tile in the game map",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "- Game instance this obj is attached to.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "- Type of tile. When created this object is merged with the value of Tile.Types[type].",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "- The map tile coordinate position of this tile on the x axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- The map tile coordinate position of this tile on the y axis.",
                    "type": "Number"
                }
            ]
        },
        "Color operations.Tile.Types": {
            "name": "Color operations.Tile.Types",
            "shortname": "Tile.Types",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Color operations",
            "file": "js/tile.js",
            "line": 118,
            "description": "Describes different types of tiles. Used by the Tile constructor 'type' param.\n\n    Tile.Types = {\n        floor: {\n           name: 'Floor',\n           char: '.',\n           color: '#333',\n           bgColor: '#111',\n           passable: true,\n           blocksLos: false\n        },\n        // ...\n    }",
            "static": 1
        },
        "Color operations.Util": {
            "name": "Color operations.Util",
            "shortname": "Util",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Color operations",
            "file": "js/util.js",
            "line": 4,
            "description": "Utility functions",
            "is_constructor": 1,
            "static": 1
        }
    },
    "classitems": [
        {
            "file": "js/vendor/hidpi-canvas.min.js",
            "line": 1,
            "description": "HiDPI Canvas Polyfill (1.0.9)\n\nAuthor: Jonathan D. Johnson (http://jondavidjohn.com)\nHomepage: https://github.com/jondavidjohn/hidpi-canvas-polyfill\nIssue Tracker: https://github.com/jondavidjohn/hidpi-canvas-polyfill/issues\nLicense: Apache 2.0",
            "class": "Contains text tokenization and breaking routines.Visual map display"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 5,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 9,
            "return": {
                "description": "Is rot.js supported by this browser?",
                "type": "Bool"
            },
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 16,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 18,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 21,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 49,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 51,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 53,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 55,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 57,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 59,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 61,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 63,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 65,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 67,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 69,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 71,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 73,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 75,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 77,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 79,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 81,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 83,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 85,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 87,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 89,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 91,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 93,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 95,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 97,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 99,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 101,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 103,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 105,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 107,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 109,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 111,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 113,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 115,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 117,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 119,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 121,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 123,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 125,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 127,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 129,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 131,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 133,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 135,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 137,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 139,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 141,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 143,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 145,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 147,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 149,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 151,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 153,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 155,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 157,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 159,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 161,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 163,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 165,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 167,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 169,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 171,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 173,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 175,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 177,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 179,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 181,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 183,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 185,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 187,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 189,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 191,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 193,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 195,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 197,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 199,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 201,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 203,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 205,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 207,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 209,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 211,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 213,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 215,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 217,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 219,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 221,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 223,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 225,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 227,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 229,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 231,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 233,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 235,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 237,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 239,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 241,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 243,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 245,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 247,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 249,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 251,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 253,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 255,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 257,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 259,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 261,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 263,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 265,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 267,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 269,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 271,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 273,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 275,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 277,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 279,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 281,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 283,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 285,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 287,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 289,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 293,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 295,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 297,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 299,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 301,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 303,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 305,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 307,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 309,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 311,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 313,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 315,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 317,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 319,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 321,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 323,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 325,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 327,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 329,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 331,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 333,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 335,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 337,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 339,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 341,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 343,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 345,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 347,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 349,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 351,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 353,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 355,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Top-level ROT namespace"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 358,
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Contains text tokenization and breaking routines"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 371,
            "description": "Measure size of a resulting text block",
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Contains text tokenization and breaking routines"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 398,
            "description": "Convert string to a series of a formatting commands",
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Contains text tokenization and breaking routines"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 532,
            "description": "Create new tokens and insert them into the stream",
            "params": [
                {
                    "name": "tokens",
                    "description": "",
                    "type": "Object[]"
                },
                {
                    "name": "tokenIndex",
                    "description": "Token being processed",
                    "type": "Int"
                },
                {
                    "name": "breakIndex",
                    "description": "Index within current token's value",
                    "type": "Int"
                },
                {
                    "name": "removeBreakChar",
                    "description": "Do we want to remove the breaking character?",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "remaining unbroken token value",
                "type": "String"
            },
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Contains text tokenization and breaking routines"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 552,
            "return": {
                "description": "Randomly picked item, null when length=0",
                "type": "Any"
            },
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Contains text tokenization and breaking routines"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 560,
            "return": {
                "description": "New array with randomized items\nFIXME destroys this!",
                "type": "Array"
            },
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Contains text tokenization and breaking routines"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 572,
            "description": "Always positive modulus",
            "params": [
                {
                    "name": "n",
                    "description": "Modulus",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "this modulo n",
                "type": "Int"
            },
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Contains text tokenization and breaking routines"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 580,
            "return": {
                "description": "First letter capitalized",
                "type": "String"
            },
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Contains text tokenization and breaking routines"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 587,
            "description": "Left pad",
            "params": [
                {
                    "name": "character",
                    "description": "",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"0\""
                },
                {
                    "name": "count",
                    "description": "",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "2"
                }
            ],
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Contains text tokenization and breaking routines"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 602,
            "description": "Right pad",
            "params": [
                {
                    "name": "character",
                    "description": "",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"0\""
                },
                {
                    "name": "count",
                    "description": "",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "2"
                }
            ],
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Contains text tokenization and breaking routines"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 617,
            "description": "Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.",
            "params": [
                {
                    "name": "template",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "argv",
                    "description": "",
                    "type": "Any",
                    "optional": true
                }
            ],
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Contains text tokenization and breaking routines"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 652,
            "description": "Convenience shortcut to String.format(this)",
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Contains text tokenization and breaking routines"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 662,
            "description": "ES5 Object.create",
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Contains text tokenization and breaking routines"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 671,
            "description": "Sets prototype of this function to an instance of parent function",
            "params": [
                {
                    "name": "parent",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Contains text tokenization and breaking routines"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 745,
            "description": "Debug helper, ideal as a map generator callback. Always bound to this.",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "what",
                    "description": "",
                    "type": "Int"
                }
            ],
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Contains text tokenization and breaking routines"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 756,
            "description": "Clear the whole display (cover it with background color)",
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Contains text tokenization and breaking routines"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 764,
            "see": [
                "ROT.Display"
            ],
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Contains text tokenization and breaking routines"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 785,
            "description": "Returns currently set options",
            "return": {
                "description": "Current options object",
                "type": "Object"
            },
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Contains text tokenization and breaking routines"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 793,
            "description": "Returns the DOM node of this display",
            "return": {
                "description": "DOM node",
                "type": "Node"
            },
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Contains text tokenization and breaking routines"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 801,
            "description": "Compute the maximum width/height to fit into a set of given constraints",
            "params": [
                {
                    "name": "availWidth",
                    "description": "Maximum allowed pixel width",
                    "type": "Int"
                },
                {
                    "name": "availHeight",
                    "description": "Maximum allowed pixel height",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "cellWidth,cellHeight",
                "type": "Int[2]"
            },
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Contains text tokenization and breaking routines"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 811,
            "description": "Compute the maximum font size to fit into a set of given constraints",
            "params": [
                {
                    "name": "availWidth",
                    "description": "Maximum allowed pixel width",
                    "type": "Int"
                },
                {
                    "name": "availHeight",
                    "description": "Maximum allowed pixel height",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "fontSize",
                "type": "Int"
            },
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Contains text tokenization and breaking routines"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 821,
            "description": "Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.",
            "params": [
                {
                    "name": "e",
                    "description": "event",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "-1 for values outside of the canvas",
                "type": "Int[2]"
            },
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Contains text tokenization and breaking routines"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 844,
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "ch",
                    "description": "One or more chars (will be overlapping themselves)",
                    "type": "String || string[]"
                },
                {
                    "name": "fg",
                    "description": "foreground color",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "bg",
                    "description": "background color",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Contains text tokenization and breaking routines"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 861,
            "description": "Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "text",
                    "description": "May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.",
                    "type": "String"
                },
                {
                    "name": "maxWidth",
                    "description": "wrap at what width?",
                    "type": "Int",
                    "optional": true
                }
            ],
            "return": {
                "description": "lines drawn",
                "type": "Int"
            },
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Contains text tokenization and breaking routines"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 907,
            "description": "Timer tick: update dirty parts",
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Contains text tokenization and breaking routines"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 932,
            "params": [
                {
                    "name": "key",
                    "description": "What to draw",
                    "type": "String"
                },
                {
                    "name": "clearBefore",
                    "description": "Is it necessary to clean before?",
                    "type": "Bool"
                }
            ],
            "class": "Contains text tokenization and breaking routines.Visual map display",
            "namespace": "Contains text tokenization and breaking routines"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1249,
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Tile backend",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1255,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Tile backend",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1262,
            "params": [
                {
                    "name": "seed",
                    "description": "Seed the number generator",
                    "type": "Number"
                }
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Tile backend",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1281,
            "return": {
                "description": "Pseudorandom value [0,1), uniformly distributed",
                "type": "Float"
            },
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Tile backend",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1293,
            "params": [
                {
                    "name": "lowerBound",
                    "description": "The lower end of the range to return a value from, inclusive",
                    "type": "Int"
                },
                {
                    "name": "upperBound",
                    "description": "The upper end of the range to return a value from, inclusive",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value",
                "type": "Int"
            },
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Tile backend",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1304,
            "params": [
                {
                    "name": "mean",
                    "description": "Mean value",
                    "type": "Float",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "stddev",
                    "description": "Standard deviation. ~95% of the absolute values will be lower than 2*stddev.",
                    "type": "Float",
                    "optional": true,
                    "optdefault": "1"
                }
            ],
            "return": {
                "description": "A normally distributed pseudorandom value",
                "type": "Float"
            },
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Tile backend",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1320,
            "return": {
                "description": "Pseudorandom value [1,100] inclusive, uniformly distributed",
                "type": "Int"
            },
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Tile backend",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1327,
            "params": [
                {
                    "name": "data",
                    "description": "key=whatever, value=weight (relative probability)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "whatever",
                "type": "String"
            },
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Tile backend",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1349,
            "description": "Get RNG state. Useful for storing the state and re-setting it via setState.",
            "return": {
                "description": "Internal state",
                "type": "?"
            },
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Tile backend",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1357,
            "description": "Set a previously retrieved state.",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "?"
                }
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Tile backend",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1405,
            "description": "Remove all learning data",
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..(Markov process)-based string generator. \nCopied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>. \nOffers configurable order and prior.",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1413,
            "return": {
                "description": "Generated string",
                "type": "String"
            },
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..(Markov process)-based string generator. \nCopied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>. \nOffers configurable order and prior.",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1424,
            "description": "Observe (learn) a string from a training set",
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..(Markov process)-based string generator. \nCopied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>. \nOffers configurable order and prior.",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1468,
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String[]"
            },
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..(Markov process)-based string generator. \nCopied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>. \nOffers configurable order and prior.",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1476,
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "String[]"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..(Markov process)-based string generator. \nCopied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>. \nOffers configurable order and prior.",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1484,
            "params": [
                {
                    "name": "context",
                    "description": "",
                    "type": "String[]"
                },
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..(Markov process)-based string generator. \nCopied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>. \nOffers configurable order and prior.",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1497,
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "String[]"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..(Markov process)-based string generator. \nCopied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>. \nOffers configurable order and prior.",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1518,
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "String[]"
                }
            ],
            "return": {
                "description": "",
                "type": "String[]"
            },
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..(Markov process)-based string generator. \nCopied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>. \nOffers configurable order and prior.",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1558,
            "return": {
                "description": "Elapsed time",
                "type": "Number"
            },
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Generic event queue: stores events and retrieves them based on their time",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1565,
            "description": "Clear all scheduled events",
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Generic event queue: stores events and retrieves them based on their time",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1574,
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "?"
                },
                {
                    "name": "time",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Generic event queue: stores events and retrieves them based on their time",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1591,
            "description": "Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.",
            "return": {
                "description": "The event previously added by addEvent, null if no event available",
                "type": "? || null"
            },
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Generic event queue: stores events and retrieves them based on their time",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1607,
            "description": "Remove an event from the queue",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "?"
                }
            ],
            "return": {
                "description": "success?",
                "type": "Bool"
            },
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Generic event queue: stores events and retrieves them based on their time",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1619,
            "description": "Remove an event from the queue",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Int"
                }
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Generic event queue: stores events and retrieves them based on their time",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1636,
            "see": [
                "ROT.EventQueue#getTime"
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Abstract scheduler",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1643,
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "?"
                },
                {
                    "name": "repeat",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Abstract scheduler",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1652,
            "description": "Clear all items",
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Abstract scheduler",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1662,
            "description": "Remove a previously added item",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "?"
                }
            ],
            "return": {
                "description": "successful?",
                "type": "Bool"
            },
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Abstract scheduler",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1678,
            "description": "Schedule next item",
            "return": {
                "description": "",
                "type": "?"
            },
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Abstract scheduler",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1695,
            "see": [
                "ROT.Scheduler#add"
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Simple fair scheduler (round-robin style)",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1703,
            "see": [
                "ROT.Scheduler#next"
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Simple fair scheduler (round-robin style)",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1721,
            "params": [
                {
                    "name": "item",
                    "description": "anything with \"getSpeed\" method",
                    "type": "Object"
                },
                {
                    "name": "repeat",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "see": [
                "ROT.Scheduler#add"
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Speed-based scheduler",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1731,
            "see": [
                "ROT.Scheduler#next"
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Speed-based scheduler",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1751,
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "repeat",
                    "description": "",
                    "type": "Bool"
                },
                {
                    "name": "time",
                    "description": "",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ],
            "see": [
                "ROT.Scheduler#add"
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Action-based scheduler",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1772,
            "see": [
                "ROT.Scheduler#next"
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Action-based scheduler",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1783,
            "description": "Set duration for the active item",
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Action-based scheduler",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1799,
            "description": "Start the main loop. When this call returns, the loop is locked.",
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Asynchronous main loop",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1806,
            "description": "Interrupt the engine by an asynchronous action",
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Asynchronous main loop",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 1814,
            "description": "Resume execution (paused by a previous lock)",
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Asynchronous main loop",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 2158,
            "description": "Remove \"i\" from its list",
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Maze generator - Eller's algorithm\nSee http://homepages.cwi.nl/~tromp/maze.html for explanation",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 2168,
            "description": "Join lists with \"i\" and \"i+1\"",
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Maze generator - Eller's algorithm\nSee http://homepages.cwi.nl/~tromp/maze.html for explanation",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 2202,
            "description": "Fill the map with random values",
            "params": [
                {
                    "name": "probability",
                    "description": "Probability for a cell to become alive; 0 = all empty, 1 = all full",
                    "type": "Float"
                }
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Cellular automaton map generator",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 2215,
            "description": "Change options.",
            "see": [
                "ROT.Map.Cellular"
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Cellular automaton map generator",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 2270,
            "description": "Get neighbor count at [i,j] in this._map",
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Cellular automaton map generator",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 2287,
            "description": "Make sure every non-wall space is accessible.",
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Cellular automaton map generator",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 2338,
            "description": "Find random points to connect. Search for the closest point in the larger space. \nThis is to minimize the length of the passage while maintaining good performance.",
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Cellular automaton map generator",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 2457,
            "description": "Get all generated rooms",
            "return": {
                "description": "",
                "type": "ROT.Map.Feature.Room[]"
            },
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Dungeon map: has rooms and corridors",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 2465,
            "description": "Get all generated corridors",
            "return": {
                "description": "",
                "type": "ROT.Map.Feature.Corridor[]"
            },
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Dungeon map: has rooms and corridors",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 2504,
            "description": "Create a map",
            "see": [
                "ROT.Map#create"
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Random dungeon generator using human-like digging patterns.\nHeavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at \nhttp://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 2602,
            "description": "Get a suitable wall",
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Random dungeon generator using human-like digging patterns.\nHeavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at \nhttp://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 2626,
            "description": "Tries adding a feature",
            "return": {
                "description": "was this a successful try?",
                "type": "Bool"
            },
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Random dungeon generator using human-like digging patterns.\nHeavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at \nhttp://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 2666,
            "description": "Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)",
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Random dungeon generator using human-like digging patterns.\nHeavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at \nhttp://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 2692,
            "description": "Find empty spaces surrounding rooms, and apply doors.",
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Random dungeon generator using human-like digging patterns.\nHeavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at \nhttp://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 2733,
            "description": "Create a map. If the time limit has been hit, returns null.",
            "see": [
                "ROT.Map#create"
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 2763,
            "description": "Generates a suitable amount of rooms",
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 2778,
            "description": "Try to generate one room",
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 2798,
            "description": "Generates connectors beween rooms",
            "return": {
                "description": "success Was this attempt successfull?",
                "type": "Bool"
            },
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 2839,
            "description": "For a given room, find the closest one from the list",
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 3009,
            "description": "Dig a polyline.",
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 3075,
            "see": [
                "ROT.Map#create"
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 3368,
            "params": [
                {
                    "name": "startPosition",
                    "description": "a 2 element array"
                },
                {
                    "name": "endPosition",
                    "description": "a 2 element array"
                }
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 3500,
            "description": "Room of random size, with a given doors and direction",
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Room",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 3533,
            "description": "Room of random size, positioned around center coords",
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Room",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 3553,
            "description": "Room of random size within a given dimensions",
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Room",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 3581,
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Room",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 3638,
            "params": [
                {
                    "name": "digCallback",
                    "description": "Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.",
                    "type": "Function"
                }
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Room",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 3740,
            "description": "If the length degenerated, this corridor might be invalid",
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Corridor",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 3750,
            "description": "We do not want the corridor to crash into a corner of a room;\nif any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n\nSituation:\n#######1\n.......?\n#######2\n\nThe corridor was dug from left to right.\n1, 2 - problematic corners, ? = N+1th cell (not dug)",
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Corridor",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 3770,
            "params": [
                {
                    "name": "digCallback",
                    "description": "Dig callback with a signature (x, y, value). Values: 0 = empty.",
                    "type": "Function"
                }
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Corridor",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 3817,
            "description": "A simple 2d implementation of simplex noise by Ondrej Zara\n\nBased on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\nWhich is based on example code by Stefan Gustavson (stegu@itn.liu.se).\nWith Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\nBetter rank ordering method by Stefan Gustavson in 2012.",
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Corridor",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 3947,
            "description": "Compute visibility for a 360-degree circle",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "R",
                    "description": "Maximum visibility radius",
                    "type": "Int"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Abstract FOV algorithm",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 3956,
            "description": "Return all neighbors in a concentric ring",
            "params": [
                {
                    "name": "cx",
                    "description": "center-x",
                    "type": "Int"
                },
                {
                    "name": "cy",
                    "description": "center-y",
                    "type": "Int"
                },
                {
                    "name": "r",
                    "description": "range",
                    "type": "Int"
                }
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Abstract FOV algorithm",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4016,
            "see": [
                "ROT.FOV#compute"
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4054,
            "params": [
                {
                    "name": "A",
                    "description": "start angle",
                    "type": "Int"
                },
                {
                    "name": "B",
                    "description": "end angle",
                    "type": "Int"
                },
                {
                    "name": "blocks",
                    "description": "Does current cell block visibility?",
                    "type": "Bool"
                },
                {
                    "name": "DATA",
                    "description": "shadowed angle pairs",
                    "type": "Int[][]"
                }
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4124,
            "see": [
                "ROT.FOV#compute"
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Precise shadowcasting algorithm",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4161,
            "params": [
                {
                    "name": "A1",
                    "description": "arc start",
                    "type": "Int[2]"
                },
                {
                    "name": "A2",
                    "description": "arc end",
                    "type": "Int[2]"
                },
                {
                    "name": "blocks",
                    "description": "Does current arc block visibility?",
                    "type": "Bool"
                },
                {
                    "name": "SHADOWS",
                    "description": "list of active shadows",
                    "type": "Int[][]"
                }
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Precise shadowcasting algorithm",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4249,
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Recursive shadowcasting algorithm\nCurrently only supports 4/8 topologies, not hexagonal.\nBased on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4261,
            "description": "Compute visibility for a 360-degree circle",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "R",
                    "description": "Maximum visibility radius",
                    "type": "Int"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Recursive shadowcasting algorithm\nCurrently only supports 4/8 topologies, not hexagonal.\nBased on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4276,
            "description": "Compute visibility for a 180-degree arc",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "R",
                    "description": "Maximum visibility radius",
                    "type": "Int"
                },
                {
                    "name": "dir",
                    "description": "Direction to look in (expressed in a ROT.DIR value);",
                    "type": "Int"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Recursive shadowcasting algorithm\nCurrently only supports 4/8 topologies, not hexagonal.\nBased on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4296,
            "description": "Compute visibility for a 90-degree arc",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "R",
                    "description": "Maximum visibility radius",
                    "type": "Int"
                },
                {
                    "name": "dir",
                    "description": "Direction to look in (expressed in a ROT.DIR value);",
                    "type": "Int"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Recursive shadowcasting algorithm\nCurrently only supports 4/8 topologies, not hexagonal.\nBased on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4312,
            "description": "Render one octant (45-degree arc) of the viewshed",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "octant",
                    "description": "Octant to be rendered",
                    "type": "Int"
                },
                {
                    "name": "R",
                    "description": "Maximum visibility radius",
                    "type": "Int"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Recursive shadowcasting algorithm\nCurrently only supports 4/8 topologies, not hexagonal.\nBased on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4325,
            "description": "Actually calculates the visibility",
            "params": [
                {
                    "name": "startX",
                    "description": "The starting X coordinate",
                    "type": "Int"
                },
                {
                    "name": "startY",
                    "description": "The starting Y coordinate",
                    "type": "Int"
                },
                {
                    "name": "row",
                    "description": "The row to render",
                    "type": "Int"
                },
                {
                    "name": "visSlopeStart",
                    "description": "The slope to start at",
                    "type": "Float"
                },
                {
                    "name": "visSlopeEnd",
                    "description": "The slope to end at",
                    "type": "Float"
                },
                {
                    "name": "radius",
                    "description": "The radius to reach out to",
                    "type": "Int"
                },
                {
                    "name": "xx",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "xy",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "yx",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "yy",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "callback",
                    "description": "The callback to use when we hit a block that is visible",
                    "type": "Function"
                }
            ],
            "class": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Recursive shadowcasting algorithm\nCurrently only supports 4/8 topologies, not hexagonal.\nBased on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting",
            "namespace": "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License."
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4392,
            "class": "Color operations.Recursive shadowcasting algorithm\nCurrently only supports 4/8 topologies, not hexagonal.\nBased on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting",
            "namespace": "Color operations"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4426,
            "description": "Add two or more colors",
            "params": [
                {
                    "name": "color1",
                    "description": "",
                    "type": "Number[]"
                },
                {
                    "name": "color2",
                    "description": "",
                    "type": "Number[]"
                }
            ],
            "return": {
                "description": "",
                "type": "Number[]"
            },
            "class": "Color operations.Recursive shadowcasting algorithm\nCurrently only supports 4/8 topologies, not hexagonal.\nBased on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting",
            "namespace": "Color operations"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4442,
            "description": "Add two or more colors, MODIFIES FIRST ARGUMENT",
            "params": [
                {
                    "name": "color1",
                    "description": "",
                    "type": "Number[]"
                },
                {
                    "name": "color2",
                    "description": "",
                    "type": "Number[]"
                }
            ],
            "return": {
                "description": "",
                "type": "Number[]"
            },
            "class": "Color operations.Recursive shadowcasting algorithm\nCurrently only supports 4/8 topologies, not hexagonal.\nBased on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting",
            "namespace": "Color operations"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4457,
            "description": "Multiply (mix) two or more colors",
            "params": [
                {
                    "name": "color1",
                    "description": "",
                    "type": "Number[]"
                },
                {
                    "name": "color2",
                    "description": "",
                    "type": "Number[]"
                }
            ],
            "return": {
                "description": "",
                "type": "Number[]"
            },
            "class": "Color operations.Recursive shadowcasting algorithm\nCurrently only supports 4/8 topologies, not hexagonal.\nBased on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting",
            "namespace": "Color operations"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4474,
            "description": "Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT",
            "params": [
                {
                    "name": "color1",
                    "description": "",
                    "type": "Number[]"
                },
                {
                    "name": "color2",
                    "description": "",
                    "type": "Number[]"
                }
            ],
            "return": {
                "description": "",
                "type": "Number[]"
            },
            "class": "Color operations.Recursive shadowcasting algorithm\nCurrently only supports 4/8 topologies, not hexagonal.\nBased on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting",
            "namespace": "Color operations"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4490,
            "description": "Interpolate (blend) two colors with a given factor",
            "params": [
                {
                    "name": "color1",
                    "description": "",
                    "type": "Number[]"
                },
                {
                    "name": "color2",
                    "description": "",
                    "type": "Number[]"
                },
                {
                    "name": "factor",
                    "description": "0..1",
                    "type": "Float",
                    "optional": true,
                    "optdefault": "0.5"
                }
            ],
            "return": {
                "description": "",
                "type": "Number[]"
            },
            "class": "Color operations.Recursive shadowcasting algorithm\nCurrently only supports 4/8 topologies, not hexagonal.\nBased on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting",
            "namespace": "Color operations"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4506,
            "description": "Interpolate (blend) two colors with a given factor in HSL mode",
            "params": [
                {
                    "name": "color1",
                    "description": "",
                    "type": "Number[]"
                },
                {
                    "name": "color2",
                    "description": "",
                    "type": "Number[]"
                },
                {
                    "name": "factor",
                    "description": "0..1",
                    "type": "Float",
                    "optional": true,
                    "optdefault": "0.5"
                }
            ],
            "return": {
                "description": "",
                "type": "Number[]"
            },
            "class": "Color operations.Recursive shadowcasting algorithm\nCurrently only supports 4/8 topologies, not hexagonal.\nBased on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting",
            "namespace": "Color operations"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4523,
            "description": "Create a new random color based on this one",
            "params": [
                {
                    "name": "color",
                    "description": "",
                    "type": "Number[]"
                },
                {
                    "name": "diff",
                    "description": "Set of standard deviations",
                    "type": "Number[]"
                }
            ],
            "return": {
                "description": "",
                "type": "Number[]"
            },
            "class": "Color operations.Recursive shadowcasting algorithm\nCurrently only supports 4/8 topologies, not hexagonal.\nBased on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting",
            "namespace": "Color operations"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4538,
            "description": "Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.",
            "params": [
                {
                    "name": "color",
                    "description": "",
                    "type": "Number[]"
                }
            ],
            "return": {
                "description": "",
                "type": "Number[]"
            },
            "class": "Color operations.Recursive shadowcasting algorithm\nCurrently only supports 4/8 topologies, not hexagonal.\nBased on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting",
            "namespace": "Color operations"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4567,
            "description": "Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.",
            "params": [
                {
                    "name": "color",
                    "description": "",
                    "type": "Number[]"
                }
            ],
            "return": {
                "description": "",
                "type": "Number[]"
            },
            "class": "Color operations.Recursive shadowcasting algorithm\nCurrently only supports 4/8 topologies, not hexagonal.\nBased on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting",
            "namespace": "Color operations"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4793,
            "description": "Adjust options at runtime",
            "see": [
                "ROT.Lighting"
            ],
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "Color operations.Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.",
            "namespace": "Color operations"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4804,
            "description": "Set the used Field-Of-View algo",
            "params": [
                {
                    "name": "fov",
                    "description": "",
                    "type": "ROT.FOV"
                }
            ],
            "class": "Color operations.Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.",
            "namespace": "Color operations"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4814,
            "description": "Set (or remove) a light source",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "color",
                    "description": "",
                    "type": "Null || string || number[3]"
                }
            ],
            "class": "Color operations.Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.",
            "namespace": "Color operations"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4831,
            "description": "Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.",
            "class": "Color operations.Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.",
            "namespace": "Color operations"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4841,
            "description": "Compute the lighting",
            "params": [
                {
                    "name": "lightingCallback",
                    "description": "Will be called with (x, y, color) for every lit cell",
                    "type": "Function"
                }
            ],
            "class": "Color operations.Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.",
            "namespace": "Color operations"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4873,
            "description": "Compute one iteration from all emitting cells",
            "params": [
                {
                    "name": "emittingCells",
                    "description": "These emit light",
                    "type": "Object"
                },
                {
                    "name": "litCells",
                    "description": "Add projected light to these",
                    "type": "Object"
                },
                {
                    "name": "doneCells",
                    "description": "These already emitted, forbid them from further calculations",
                    "type": "Object"
                }
            ],
            "class": "Color operations.Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.",
            "namespace": "Color operations"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4890,
            "description": "Prepare a list of emitters for next pass",
            "params": [
                {
                    "name": "litCells",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "doneCells",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Color operations.Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.",
            "namespace": "Color operations"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4930,
            "description": "Compute one iteration from one cell",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "color",
                    "description": "",
                    "type": "Number[]"
                },
                {
                    "name": "litCells",
                    "description": "Cell data to by updated",
                    "type": "Object"
                }
            ],
            "class": "Color operations.Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.",
            "namespace": "Color operations"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 4961,
            "description": "Compute FOV (\"form factor\") for a potential light source at [x,y]",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Color operations.Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.",
            "namespace": "Color operations"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 5016,
            "description": "Compute a path from a given point",
            "params": [
                {
                    "name": "fromX",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "fromY",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "callback",
                    "description": "Will be called for every path item with arguments \"x\" and \"y\"",
                    "type": "Function"
                }
            ],
            "class": "Color operations.Abstract pathfinder",
            "namespace": "Color operations"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 5052,
            "description": "Compute a path from a given point",
            "see": [
                "ROT.Path#compute"
            ],
            "class": "Color operations.Simplified Dijkstra's algorithm: all edges have a value of 1",
            "namespace": "Color operations"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 5068,
            "description": "Compute a non-cached value",
            "class": "Color operations.Simplified Dijkstra's algorithm: all edges have a value of 1",
            "namespace": "Color operations"
        },
        {
            "file": "js/vendor/rot.js",
            "line": 5113,
            "description": "Compute a path from a given point",
            "see": [
                "ROT.Path#compute"
            ],
            "class": "Color operations.Simplified A* algorithm: all edges have a value of 1",
            "namespace": "Color operations"
        },
        {
            "file": "js/array-2d.js",
            "line": 20,
            "description": "Width of the 2d Array.",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "class": "Color operations.Array2d",
            "namespace": "Color operations"
        },
        {
            "file": "js/array-2d.js",
            "line": 27,
            "description": "Height of the 2d Array.",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "class": "Color operations.Array2d",
            "namespace": "Color operations"
        },
        {
            "file": "js/array-2d.js",
            "line": 34,
            "description": "2d Array data",
            "itemtype": "property",
            "name": "data",
            "type": "Array",
            "class": "Color operations.Array2d",
            "namespace": "Color operations"
        },
        {
            "file": "js/array-2d.js",
            "line": 41,
            "description": "Resets the 2d array, clearing all data and initializing with this.width and this.height.",
            "itemtype": "method",
            "name": "reset",
            "class": "Color operations.Array2d",
            "namespace": "Color operations"
        },
        {
            "file": "js/array-2d.js",
            "line": 52,
            "description": "Updates the size of this Array2d without destroying data",
            "itemtype": "method",
            "name": "updateSize",
            "class": "Color operations.Array2d",
            "namespace": "Color operations"
        },
        {
            "file": "js/array-2d.js",
            "line": 66,
            "description": "Sets a value at given coords.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "x",
                    "description": "- Position on the x axis of the value being set.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- Position on the y axis of the value being set.",
                    "type": "Number"
                },
                {
                    "name": "value",
                    "description": "- The value being set at given coords.",
                    "type": "Mixed"
                }
            ],
            "class": "Color operations.Array2d",
            "namespace": "Color operations"
        },
        {
            "file": "js/array-2d.js",
            "line": 80,
            "description": "Gets a value from given coords.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "x",
                    "description": "- Position on the x axis of the value being retrieved.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- Position on the y axis of the value being retrieved.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Mixed"
            },
            "class": "Color operations.Array2d",
            "namespace": "Color operations"
        },
        {
            "file": "js/array-2d.js",
            "line": 94,
            "description": "Removes a value from given coords.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "x",
                    "description": "- Position on the x axis of the value being removed.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- Position on the y axis of the value being removed.",
                    "type": "Number"
                }
            ],
            "class": "Color operations.Array2d",
            "namespace": "Color operations"
        },
        {
            "file": "js/array-2d.js",
            "line": 103,
            "description": "Retrieves an array of values of adjacent coords.",
            "itemtype": "method",
            "name": "getAdjacent",
            "params": [
                {
                    "name": "x",
                    "description": "- Position on the x axis of the coord to get adjacent values of.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- Position on the x axis of the coord to get adjacent values of.",
                    "type": "Number"
                },
                {
                    "name": "withCoords",
                    "description": "- If true the returned array will include the coords of each value ([{x: 0, y: 0, value: 1}, ...])",
                    "type": "Bool"
                },
                {
                    "name": "filter",
                    "description": "- A function to filter the values returned (function(value, x, y){ return true;})",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "An array of adjacent coord values.",
                "type": "Array"
            },
            "class": "Color operations.Array2d",
            "namespace": "Color operations"
        },
        {
            "file": "js/array-2d.js",
            "line": 179,
            "description": "Retrieves an array of values of coords within a given radius.",
            "itemtype": "method",
            "name": "getWithinSquareRadius",
            "params": [
                {
                    "name": "x",
                    "description": "- Position on the x axis of the coord at the center of the radius.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- Position on the x axis of the coord at the center of the radius.",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "- Radius of the area to retrieve tiles from.",
                    "type": "Number"
                },
                {
                    "name": "withCoords",
                    "description": "- If true the returned array will include the coords of each value ([{x: 0, y: 0, value: 1}, ...])",
                    "type": "Bool",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "filter",
                    "description": "- A function to filter the values returned (function(value, x, y){ return true;})",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "undefined"
                },
                {
                    "name": "includeTarget",
                    "description": "- If true the value of the coordinates given will be included in the returned array.",
                    "type": "Bool",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "An array of coord values within a square radius of the given coords.",
                "type": "Array"
            },
            "class": "Color operations.Array2d",
            "namespace": "Color operations"
        },
        {
            "file": "js/array-2d.js",
            "line": 237,
            "description": "Retrieves an array of values of coords along a line starting at point 0 and crossing point 1 until it hits the edge of the 2d array or a coord value returning true when passed to the condtion function.",
            "itemtype": "method",
            "name": "getLineTo",
            "params": [
                {
                    "name": "x0",
                    "description": "- Position on the x axis of the coord 0.",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "- Position on the y axis of the coord 0.",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "- Position on the x axis of the coord 1.",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "- Position on the y axis of the coord 1.",
                    "type": "Number"
                },
                {
                    "name": "condition",
                    "description": "- A function to determine when to end the line. A coord value returning true when passed to the function will end the line. (function(value, x, y){ return true;})",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "withCoords",
                    "description": "- If true the returned array will include the coords of each value ([{x: 0, y: 0, value: 1}, ...])",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "An array of coord values.",
                "type": "Array"
            },
            "class": "Color operations.Array2d",
            "namespace": "Color operations"
        },
        {
            "file": "js/array-2d.js",
            "line": 292,
            "description": "Retrieves an array of the nearest coord values meeting checked requirements. If multiple coord values were matched at the same nearest distance, the returned array will contain multiple matched coord values.\nUsed for projecting path of ranged attacks, pushed entities, ect.",
            "itemtype": "method",
            "name": "findNearest",
            "params": [
                {
                    "name": "tileX",
                    "description": "- Position on the x axis of the coord at the center of the radius.",
                    "type": "Number"
                },
                {
                    "name": "tileY",
                    "description": "- Position on the x axis of the coord at the center of the radius.",
                    "type": "Number"
                },
                {
                    "name": "maxRadius",
                    "description": "- Maxium search radius from given coord.",
                    "type": "Number"
                },
                {
                    "name": "check",
                    "description": "- A function to determine when the desired coord value is matched. A coord value returning true when passed to the function would be added to the list of results. (function(value, x, y){ return true;})",
                    "type": "Function"
                },
                {
                    "name": "withCoords",
                    "description": "- If true the returned array will include the coords of each value ([{x: 0, y: 0, value: 1}, ...])",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "An array of coord values within a square radius of the given coords.",
                "type": "Array"
            },
            "class": "Color operations.Array2d",
            "namespace": "Color operations"
        },
        {
            "file": "js/console.js",
            "line": 20,
            "description": "Game instance this obj is attached to.",
            "itemtype": "property",
            "name": "game",
            "type": "Game",
            "class": "Color operations.Console",
            "namespace": "Color operations"
        },
        {
            "file": "js/console.js",
            "line": 27,
            "description": "Element containing console messages.\nMust be manually added to the DOM",
            "itemtype": "property",
            "name": "el",
            "type": "HTMLElement",
            "class": "Color operations.Console",
            "namespace": "Color operations"
        },
        {
            "file": "js/console.js",
            "line": 35,
            "description": "Number of messages to display at once.",
            "itemtype": "property",
            "name": "messageHistoryCount",
            "type": "Number",
            "class": "Color operations.Console",
            "namespace": "Color operations"
        },
        {
            "file": "js/console.js",
            "line": 42,
            "description": "Adds a message to the console.",
            "itemtype": "method",
            "name": "log",
            "params": [
                {
                    "name": "-",
                    "description": "Message to be added.",
                    "type": "String"
                }
            ],
            "class": "Color operations.Console",
            "namespace": "Color operations"
        },
        {
            "file": "js/entity-manager.js",
            "line": 21,
            "description": "Game instance this obj is attached to.",
            "itemtype": "property",
            "name": "game",
            "type": "Game",
            "class": "Color operations.EntityManager",
            "namespace": "Color operations"
        },
        {
            "file": "js/entity-manager.js",
            "line": 28,
            "description": "Array containing all entities.",
            "itemtype": "property",
            "name": "entities",
            "type": "Array",
            "class": "Color operations.EntityManager",
            "namespace": "Color operations"
        },
        {
            "file": "js/entity-manager.js",
            "line": 35,
            "description": "Array2d containing all entities by their current map tile coord",
            "itemtype": "property",
            "name": "entityMap",
            "type": "Array2d",
            "class": "Color operations.EntityManager",
            "namespace": "Color operations"
        },
        {
            "file": "js/entity-manager.js",
            "line": 42,
            "description": "Retrieves an entity by map tile coords.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "x",
                    "description": "- The map tile coordinate position of the entity on the x axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- The map tile coordinate position of the entity on the y axis.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Entity|false"
            },
            "class": "Color operations.EntityManager",
            "namespace": "Color operations"
        },
        {
            "file": "js/entity-manager.js",
            "line": 53,
            "description": "Adds an entity to the manager.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "x",
                    "description": "- The map tile coordinate position of the entity on the x axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- The map tile coordinate position of the entity on the y axis.",
                    "type": "Number"
                },
                {
                    "name": "ent",
                    "description": "- The entity to be added.",
                    "type": "Entity"
                }
            ],
            "class": "Color operations.EntityManager",
            "namespace": "Color operations"
        },
        {
            "file": "js/entity-manager.js",
            "line": 68,
            "description": "Removes an entity to the manager.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "ent",
                    "description": "- The entity to be removed.",
                    "type": "Entity"
                }
            ],
            "class": "Color operations.EntityManager",
            "namespace": "Color operations"
        },
        {
            "file": "js/entity-manager.js",
            "line": 79,
            "description": "Changes the position of an entity already added to this entityManager.",
            "itemtype": "method",
            "name": "move",
            "params": [
                {
                    "name": "x",
                    "description": "- The new map tile coordinate position of the entity on the x axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- The new map tile coordinate position of the entity on the y axis.",
                    "type": "Number"
                },
                {
                    "name": "ent",
                    "description": "- The entity to be removed.",
                    "type": "Entity"
                }
            ],
            "class": "Color operations.EntityManager",
            "namespace": "Color operations"
        },
        {
            "file": "js/entity-manager.js",
            "line": 93,
            "description": "Calls the entity.update() method on all entities. Removes dead entities. Typically called after a player has resolved their actions.",
            "itemtype": "method",
            "name": "update",
            "class": "Color operations.EntityManager",
            "namespace": "Color operations"
        },
        {
            "file": "js/entity-manager.js",
            "line": 109,
            "description": "Resets this entityManager.",
            "itemtype": "method",
            "name": "reset",
            "class": "Color operations.EntityManager",
            "namespace": "Color operations"
        },
        {
            "file": "js/entity-manager.js",
            "line": 118,
            "description": "Sets the size of the map to manage entities within.",
            "itemtype": "method",
            "name": "setSize",
            "params": [
                {
                    "name": "width",
                    "description": "- Width of current map in tiles.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "- Height of current map in tiles.",
                    "type": "Number"
                }
            ],
            "class": "Color operations.EntityManager",
            "namespace": "Color operations"
        },
        {
            "file": "js/entity.js",
            "line": 27,
            "description": "Game instance this obj is attached to.",
            "itemtype": "property",
            "name": "game",
            "type": "Game",
            "class": "Color operations.Entity",
            "namespace": "Color operations"
        },
        {
            "file": "js/entity.js",
            "line": 34,
            "description": "The type of entity this is.\nWhen created this object is merged with the value of Entity.Types[type].",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "class": "Color operations.Entity",
            "namespace": "Color operations"
        },
        {
            "file": "js/entity.js",
            "line": 42,
            "description": "Name used when referencing describing this entity.\nUsed in console messages.",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "Color operations.Entity",
            "namespace": "Color operations"
        },
        {
            "file": "js/entity.js",
            "line": 50,
            "description": "The map tile coordinate position of the entity on the x axis.",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Color operations.Entity",
            "namespace": "Color operations"
        },
        {
            "file": "js/entity.js",
            "line": 57,
            "description": "The map tile coordinate position of the entity on the y axis.",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Color operations.Entity",
            "namespace": "Color operations"
        },
        {
            "file": "js/entity.js",
            "line": 64,
            "description": "The character displayed when rendering this entity.",
            "itemtype": "property",
            "name": "char",
            "type": "String",
            "class": "Color operations.Entity",
            "namespace": "Color operations"
        },
        {
            "file": "js/entity.js",
            "line": 71,
            "description": "The color of the character displayed when rendering this entity. Not rendered if false.",
            "itemtype": "property",
            "name": "color",
            "type": "String|bool",
            "class": "Color operations.Entity",
            "namespace": "Color operations"
        },
        {
            "file": "js/entity.js",
            "line": 78,
            "description": "The background color the character displayed when rendering this entity. Not rendered if false.",
            "itemtype": "property",
            "name": "bgColor",
            "type": "String|bool",
            "class": "Color operations.Entity",
            "namespace": "Color operations"
        },
        {
            "file": "js/entity.js",
            "line": 85,
            "description": "Determines if this entity has been killed and needs to be removed.",
            "itemtype": "property",
            "name": "dead",
            "type": "bool",
            "class": "Color operations.Entity",
            "namespace": "Color operations"
        },
        {
            "file": "js/entity.js",
            "line": 92,
            "description": "Determines if this entity can be pushed by the player.",
            "itemtype": "property",
            "name": "pushable",
            "type": "bool",
            "class": "Color operations.Entity",
            "namespace": "Color operations"
        },
        {
            "file": "js/entity.js",
            "line": 99,
            "description": "Called after a player action has been resolved. Resolves this entities turn.",
            "itemtype": "method",
            "name": "update",
            "class": "Color operations.Entity",
            "namespace": "Color operations"
        },
        {
            "file": "js/entity.js",
            "line": 107,
            "description": "Changes the position of this entity on the map.",
            "itemtype": "method",
            "name": "moveTo",
            "class": "Color operations.Entity",
            "namespace": "Color operations"
        },
        {
            "file": "js/entity.js",
            "line": 115,
            "description": "Handles the behavior of a player or other entity attempting to move into the tile coord this entity is currently occupying.",
            "itemtype": "method",
            "name": "bump",
            "params": [
                {
                    "name": "entity",
                    "description": "- The player or entity attemplting to move into this entity's tile.",
                    "type": "Entity"
                }
            ],
            "class": "Color operations.Entity",
            "namespace": "Color operations"
        },
        {
            "file": "js/fov.js",
            "line": 22,
            "description": "Game instance this obj is attached to.",
            "itemtype": "property",
            "name": "game",
            "type": "Game",
            "class": "Color operations.Fov",
            "namespace": "Color operations"
        },
        {
            "file": "js/fov.js",
            "line": 30,
            "description": "Array2d storing fov visibility fovMap",
            "itemtype": "property",
            "name": "fovMap",
            "type": "Array2d",
            "class": "Color operations.Fov",
            "namespace": "Color operations"
        },
        {
            "file": "js/fov.js",
            "line": 38,
            "description": "Max visible distance in tiles",
            "itemtype": "property",
            "name": "maxSightRange",
            "type": "Number",
            "class": "Color operations.Fov",
            "namespace": "Color operations"
        },
        {
            "file": "js/fov.js",
            "line": 46,
            "description": "ROT.FOV instance",
            "itemtype": "property",
            "name": "_fov",
            "access": "private",
            "tagname": "",
            "type": "ROT.FOV",
            "class": "Color operations.Fov",
            "namespace": "Color operations"
        },
        {
            "file": "js/fov.js",
            "line": 55,
            "description": "Calculates the fov data relative to given coords;",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "x",
                    "description": "- The map coordinate position to calculate Fov from on the x axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- The map coordinate position to calculate Fov from on the y axis.",
                    "type": "Number"
                }
            ],
            "class": "Color operations.Fov",
            "namespace": "Color operations"
        },
        {
            "file": "js/fov.js",
            "line": 74,
            "description": "Retrieves the visibility of the tile at given coords",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "x",
                    "description": "- The map coordinate position to get Fov visibility from on the x axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- The map coordinate position to get Fov visibility from on the y axis.",
                    "type": "Number"
                }
            ],
            "class": "Color operations.Fov",
            "namespace": "Color operations"
        },
        {
            "file": "js/fov.js",
            "line": 84,
            "description": "Checks if a tile blocks line of sight",
            "itemtype": "method",
            "name": "checkVisible",
            "class": "Color operations.Fov",
            "namespace": "Color operations"
        },
        {
            "file": "js/fov.js",
            "line": 93,
            "description": "Sets the size of the map to mange fov within.",
            "itemtype": "method",
            "name": "setSize",
            "params": [
                {
                    "name": "width",
                    "description": "- Width of current map in tiles.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "- Height of current map in tiles.",
                    "type": "Number"
                }
            ],
            "class": "Color operations.Fov",
            "namespace": "Color operations"
        },
        {
            "file": "js/game.js",
            "line": 35,
            "description": "The current map.",
            "itemtype": "property",
            "name": "map",
            "type": "Array2d",
            "class": "Color operations.Game",
            "namespace": "Color operations"
        },
        {
            "file": "js/game.js",
            "line": 42,
            "description": "The current entityManager.",
            "itemtype": "property",
            "name": "entityManager",
            "type": "EntityManager",
            "class": "Color operations.Game",
            "namespace": "Color operations"
        },
        {
            "file": "js/game.js",
            "line": 49,
            "description": "The current Fov.",
            "itemtype": "property",
            "name": "fov",
            "type": "Fov",
            "class": "Color operations.Game",
            "namespace": "Color operations"
        },
        {
            "file": "js/game.js",
            "line": 56,
            "description": "The current Lighting.",
            "itemtype": "property",
            "name": "lighting",
            "type": "Lighting",
            "class": "Color operations.Game",
            "namespace": "Color operations"
        },
        {
            "file": "js/game.js",
            "line": 63,
            "description": "The current renderer.",
            "itemtype": "property",
            "name": "renderer",
            "type": "Renderer",
            "class": "Color operations.Game",
            "namespace": "Color operations"
        },
        {
            "file": "js/game.js",
            "line": 70,
            "description": "The current console.",
            "itemtype": "property",
            "name": "console",
            "type": "Console",
            "class": "Color operations.Game",
            "namespace": "Color operations"
        },
        {
            "file": "js/game.js",
            "line": 77,
            "description": "The current player.",
            "itemtype": "property",
            "name": "player",
            "type": "Player",
            "class": "Color operations.Game",
            "namespace": "Color operations"
        },
        {
            "file": "js/game.js",
            "line": 84,
            "description": "The current input.",
            "itemtype": "property",
            "name": "input",
            "type": "Input",
            "class": "Color operations.Game",
            "namespace": "Color operations"
        },
        {
            "file": "js/game.js",
            "line": 91,
            "description": "The current mouse.",
            "itemtype": "property",
            "name": "mouse",
            "type": "Mouse",
            "class": "Color operations.Game",
            "namespace": "Color operations"
        },
        {
            "file": "js/game.js",
            "line": 98,
            "description": "Sets the size of the map resizing this.map and this.entityManager.",
            "itemtype": "method",
            "name": "setMapSize",
            "params": [
                {
                    "name": "width",
                    "description": "- Width in tilse to set map and entityManager to.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "- Height in tilse to set map and entityManager to.",
                    "type": "Number"
                }
            ],
            "class": "Color operations.Game",
            "namespace": "Color operations"
        },
        {
            "file": "js/game.js",
            "line": 111,
            "description": "Starts the game.",
            "itemtype": "method",
            "name": "start",
            "class": "Color operations.Game",
            "namespace": "Color operations"
        },
        {
            "file": "js/game.js",
            "line": 123,
            "description": "Handler for user input actions.",
            "itemtype": "method",
            "name": "onKeyAction",
            "params": [
                {
                    "name": "action",
                    "description": "- Action triggered by user input.",
                    "type": "String"
                }
            ],
            "class": "Color operations.Game",
            "namespace": "Color operations"
        },
        {
            "file": "js/game.js",
            "line": 136,
            "description": "Handler for user mouse tile click.",
            "itemtype": "method",
            "name": "onTileClick",
            "params": [
                {
                    "name": "tile",
                    "description": "- The tile clicked.",
                    "type": "Tile"
                }
            ],
            "class": "Color operations.Game",
            "namespace": "Color operations"
        },
        {
            "file": "js/game.js",
            "line": 151,
            "description": "Handler for user mouse tile hover.",
            "itemtype": "method",
            "name": "onTileHover",
            "params": [
                {
                    "name": "tile",
                    "description": "- The tile hovered.",
                    "type": "Tile"
                }
            ],
            "class": "Color operations.Game",
            "namespace": "Color operations"
        },
        {
            "file": "js/input.js",
            "line": 39,
            "description": "An object of key val pairs mapping keyCode to action",
            "itemtype": "property",
            "name": "bindings",
            "type": "Object",
            "class": "Color operations.Input",
            "namespace": "Color operations"
        },
        {
            "file": "js/input.js",
            "line": 46,
            "description": "Function called when a key bound to an action is pressed (function(action){}).",
            "itemtype": "property",
            "name": "onKeyAction",
            "type": "Function",
            "class": "Color operations.Input",
            "namespace": "Color operations"
        },
        {
            "file": "js/input.js",
            "line": 53,
            "description": "Bind a user action to a key input",
            "itemtype": "method",
            "name": "bindAction",
            "params": [
                {
                    "name": "action",
                    "description": "- The action to bind the key to.",
                    "type": "String"
                },
                {
                    "name": "keyName",
                    "description": "- The keyname to bind the action to. @see Input.Keys",
                    "type": "String"
                }
            ],
            "class": "Color operations.Input",
            "namespace": "Color operations"
        },
        {
            "file": "js/input.js",
            "line": 64,
            "description": "Converts a user input key code to an action bound to that key or false if none is bound.",
            "itemtype": "method",
            "name": "getActionFromKeyCode",
            "params": [
                {
                    "name": "keyCode",
                    "description": "- The key code to retrieve an action bound to.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "String|bool The action bound to the keyCode or false."
            },
            "class": "Color operations.Input",
            "namespace": "Color operations"
        },
        {
            "file": "js/input.js",
            "line": 77,
            "description": "Event handler for document.onkeydown. Triggered when a key is pressed.\nIf an action is bound to the key pressed, false is returned to cancel the default browser behavior of the keypress.\nIf an action is not bound to the key pressed, true is returned allowing the default browser behavior of the keypress to function.",
            "itemtype": "method",
            "name": "onKeyDown",
            "params": [
                {
                    "name": "event",
                    "description": "- The onkeydown event.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "bool"
            },
            "class": "Color operations.Input",
            "namespace": "Color operations"
        },
        {
            "file": "js/input.js",
            "line": 99,
            "description": "Loads multiple action key bindings",
            "itemtype": "method",
            "name": "addBindings",
            "params": [
                {
                    "name": "bindings",
                    "description": "- An object of key val pairs mapping an action to an array of keys that trigger it. Input.Keys is used to convert input key string names to key codes.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "action1",
                            "description": "Input keys mapped to action1. ['A', 'B', ...]",
                            "type": "Array"
                        },
                        {
                            "name": "action2",
                            "description": "Input keys mapped to action2. ['X', 'Y', ...]",
                            "type": "Array"
                        },
                        {
                            "name": "...",
                            "description": ""
                        }
                    ]
                }
            ],
            "example": [
                "\n           //bindings param example:\n           {\n               up: ['UP_ARROW'],\n               down: ['DOWN_ARROW'],\n               left: ['LEFT_ARROW'],\n               right: ['RIGHT_ARROW'],\n           }"
            ],
            "class": "Color operations.Input",
            "namespace": "Color operations"
        },
        {
            "file": "js/input.js",
            "line": 126,
            "static": 1,
            "itemtype": "property",
            "name": "Keys",
            "type": "{Object}",
            "class": "Color operations.Input",
            "namespace": "Color operations"
        },
        {
            "file": "js/lighting.js",
            "line": 37,
            "description": "Game instance this obj is attached to.",
            "itemtype": "property",
            "name": "game",
            "type": "Game",
            "class": "Color operations.Lighting",
            "namespace": "Color operations"
        },
        {
            "file": "js/lighting.js",
            "line": 45,
            "description": "Array2d storing Lighting data.",
            "itemtype": "property",
            "name": "LightingMap",
            "type": "Array2d",
            "class": "Color operations.Lighting",
            "namespace": "Color operations"
        },
        {
            "file": "js/lighting.js",
            "line": 53,
            "description": "Reflectivity of visible tiles.",
            "itemtype": "property",
            "name": "reflectivity",
            "type": "Number",
            "class": "Color operations.Lighting",
            "namespace": "Color operations"
        },
        {
            "file": "js/lighting.js",
            "line": 61,
            "description": "Ambient light",
            "itemtype": "property",
            "name": "ambientLight",
            "type": "Array",
            "class": "Color operations.Lighting",
            "namespace": "Color operations"
        },
        {
            "file": "js/lighting.js",
            "line": 69,
            "description": "ROT.FOV instance",
            "itemtype": "property",
            "name": "_fov",
            "access": "private",
            "tagname": "",
            "type": "ROT.FOV",
            "class": "Color operations.Lighting",
            "namespace": "Color operations"
        },
        {
            "file": "js/lighting.js",
            "line": 78,
            "description": "ROT.Lighting instance",
            "itemtype": "property",
            "name": "_lighting",
            "access": "private",
            "tagname": "",
            "type": "ROT.Lighting",
            "class": "Color operations.Lighting",
            "namespace": "Color operations"
        },
        {
            "file": "js/lighting.js",
            "line": 87,
            "description": "Calculates the Lighting data relative to given coords;",
            "itemtype": "method",
            "name": "update",
            "class": "Color operations.Lighting",
            "namespace": "Color operations"
        },
        {
            "file": "js/lighting.js",
            "line": 119,
            "description": "Retrieves the visibility of the tile at given coords",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "x",
                    "description": "- The map coordinate position to get Lighting visibility from on the x axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- The map coordinate position to get Lighting visibility from on the y axis.",
                    "type": "Number"
                }
            ],
            "class": "Color operations.Lighting",
            "namespace": "Color operations"
        },
        {
            "file": "js/lighting.js",
            "line": 129,
            "description": "Set a light position and color",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "x",
                    "description": "- The map coordinate position to set lightin on the x axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- The map coordinate position to set lightin on the y axis.",
                    "type": "Number"
                },
                {
                    "name": "r",
                    "description": "- Red.",
                    "type": "Number"
                },
                {
                    "name": "g",
                    "description": "- Green.",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "- Blue.",
                    "type": "Number"
                }
            ],
            "class": "Color operations.Lighting",
            "namespace": "Color operations"
        },
        {
            "file": "js/lighting.js",
            "line": 142,
            "description": "Returns the reflectivity value of a tile",
            "itemtype": "method",
            "name": "getTileReflectivity",
            "class": "Color operations.Lighting",
            "namespace": "Color operations"
        },
        {
            "file": "js/lighting.js",
            "line": 153,
            "description": "Checks if a tile blocks line of sight",
            "itemtype": "method",
            "name": "checkVisible",
            "class": "Color operations.Lighting",
            "namespace": "Color operations"
        },
        {
            "file": "js/lighting.js",
            "line": 162,
            "description": "Sets the size of the map to mange Lighting within.",
            "itemtype": "method",
            "name": "setSize",
            "params": [
                {
                    "name": "width",
                    "description": "- Width of current map in tiles.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "- Height of current map in tiles.",
                    "type": "Number"
                }
            ],
            "class": "Color operations.Lighting",
            "namespace": "Color operations"
        },
        {
            "file": "js/mouse.js",
            "line": 30,
            "description": "Game instance this obj is attached to.",
            "itemtype": "property",
            "name": "game",
            "type": "Game",
            "class": "Color operations.Mouse",
            "namespace": "Color operations"
        },
        {
            "file": "js/mouse.js",
            "line": 37,
            "description": "A function to handle tile mouse click events",
            "itemtype": "method",
            "name": "onTileClick",
            "params": [
                {
                    "name": "tile",
                    "description": "- Tile object clicked.",
                    "type": "Tile"
                }
            ],
            "class": "Color operations.Mouse",
            "namespace": "Color operations"
        },
        {
            "file": "js/mouse.js",
            "line": 44,
            "description": "Current mouse x axis coord relative to upper left corner of mapview element.",
            "itemtype": "property",
            "name": "mapViewMouseX",
            "type": "Number",
            "class": "Color operations.Mouse",
            "namespace": "Color operations"
        },
        {
            "file": "js/mouse.js",
            "line": 50,
            "description": "Current mouse y axis coord relative to upper left corner of mapview element.",
            "itemtype": "property",
            "name": "mapViewMouseY",
            "type": "Number",
            "class": "Color operations.Mouse",
            "namespace": "Color operations"
        },
        {
            "file": "js/mouse.js",
            "line": 57,
            "description": "True if mouse is currently over mapview.",
            "itemtype": "property",
            "name": "mapViewMouseOver",
            "type": "Bool",
            "class": "Color operations.Mouse",
            "namespace": "Color operations"
        },
        {
            "file": "js/mouse.js",
            "line": 64,
            "description": "Hander for mouse events",
            "itemtype": "method",
            "name": "handleEvent",
            "params": [
                {
                    "name": "e",
                    "description": "- mouse event",
                    "type": "Event"
                }
            ],
            "class": "Color operations.Mouse",
            "namespace": "Color operations"
        },
        {
            "file": "js/mouse.js",
            "line": 85,
            "description": "Hander for mouse click events",
            "itemtype": "method",
            "name": "mouseClick",
            "params": [
                {
                    "name": "e",
                    "description": "- mouse event",
                    "type": "Event"
                }
            ],
            "class": "Color operations.Mouse",
            "namespace": "Color operations"
        },
        {
            "file": "js/mouse.js",
            "line": 99,
            "description": "Hander for mouse enter events",
            "itemtype": "method",
            "name": "mouseEnter",
            "params": [
                {
                    "name": "e",
                    "description": "- mouse event",
                    "type": "Event"
                }
            ],
            "class": "Color operations.Mouse",
            "namespace": "Color operations"
        },
        {
            "file": "js/mouse.js",
            "line": 108,
            "description": "Hander for mouse leave events",
            "itemtype": "method",
            "name": "mouseLeave",
            "params": [
                {
                    "name": "e",
                    "description": "- mouse event",
                    "type": "Event"
                }
            ],
            "class": "Color operations.Mouse",
            "namespace": "Color operations"
        },
        {
            "file": "js/mouse.js",
            "line": 119,
            "description": "Hander for mouse move events",
            "itemtype": "method",
            "name": "mouseMove",
            "params": [
                {
                    "name": "e",
                    "description": "- mouse event",
                    "type": "Event"
                }
            ],
            "class": "Color operations.Mouse",
            "namespace": "Color operations"
        },
        {
            "file": "js/player.js",
            "line": 17,
            "description": "Game instance this obj is attached to.",
            "itemtype": "property",
            "name": "game",
            "type": "Game",
            "class": "Color operations.Player",
            "namespace": "Color operations"
        },
        {
            "file": "js/player.js",
            "line": 24,
            "description": "Name used when referencing describing this player.\nUsed in console messages.",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "Color operations.Player",
            "namespace": "Color operations"
        },
        {
            "file": "js/player.js",
            "line": 32,
            "description": "The map tile coordinate position of the player on the x axis.",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Color operations.Player",
            "namespace": "Color operations"
        },
        {
            "file": "js/player.js",
            "line": 39,
            "description": "The map tile coordinate position of the player on the y axis.",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Color operations.Player",
            "namespace": "Color operations"
        },
        {
            "file": "js/player.js",
            "line": 46,
            "description": "The character displayed when rendering this player.",
            "itemtype": "property",
            "name": "char",
            "type": "String",
            "class": "Color operations.Player",
            "namespace": "Color operations"
        },
        {
            "file": "js/player.js",
            "line": 53,
            "description": "The color of the character displayed when rendering this player.",
            "itemtype": "property",
            "name": "color",
            "type": "String|bool",
            "class": "Color operations.Player",
            "namespace": "Color operations"
        },
        {
            "file": "js/player.js",
            "line": 60,
            "description": "The background color the character displayed when rendering this player.",
            "itemtype": "property",
            "name": "bgColor",
            "type": "String|bool",
            "class": "Color operations.Player",
            "namespace": "Color operations"
        },
        {
            "file": "js/player.js",
            "line": 67,
            "description": "Called when user key is pressed with action of key pressed as an arg.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "action",
                    "description": "- action bound to key pressed by user",
                    "type": "String"
                }
            ],
            "class": "Color operations.Player",
            "namespace": "Color operations"
        },
        {
            "file": "js/player.js",
            "line": 126,
            "description": "Changes the position of this entity on the map.",
            "itemtype": "method",
            "name": "moveTo",
            "class": "Color operations.Player",
            "namespace": "Color operations"
        },
        {
            "file": "js/renderer.js",
            "line": 27,
            "description": "Game instance this obj is attached to.",
            "itemtype": "property",
            "name": "game",
            "type": "Game",
            "class": "Color operations.Renderer",
            "namespace": "Color operations"
        },
        {
            "file": "js/renderer.js",
            "line": 34,
            "description": "Canvas element this renderer draws to.",
            "itemtype": "property",
            "name": "canvas",
            "type": "HTMLCanvasElement",
            "class": "Color operations.Renderer",
            "namespace": "Color operations"
        },
        {
            "file": "js/renderer.js",
            "line": 41,
            "description": "Drawing context of this.canvas",
            "itemtype": "property",
            "name": "ctx",
            "type": "CanvasRenderingContext2D",
            "class": "Color operations.Renderer",
            "namespace": "Color operations"
        },
        {
            "file": "js/renderer.js",
            "line": 48,
            "description": "Canvas element this renderer draws to as a buffer for this.canvas.",
            "itemtype": "property",
            "name": "buffer",
            "type": "HTMLCanvasElement",
            "class": "Color operations.Renderer",
            "namespace": "Color operations"
        },
        {
            "file": "js/renderer.js",
            "line": 55,
            "description": "Drawing context of this.buffer",
            "itemtype": "property",
            "name": "bufferCtx",
            "type": "CanvasRenderingContext2D",
            "class": "Color operations.Renderer",
            "namespace": "Color operations"
        },
        {
            "file": "js/renderer.js",
            "line": 62,
            "description": "Background color of map view.",
            "itemtype": "property",
            "name": "bgColor",
            "type": "String",
            "class": "Color operations.Renderer",
            "namespace": "Color operations"
        },
        {
            "file": "js/renderer.js",
            "line": 69,
            "description": "Color overlayed when mouse is over a tile.",
            "itemtype": "property",
            "name": "hoverColor",
            "type": "String",
            "class": "Color operations.Renderer",
            "namespace": "Color operations"
        },
        {
            "file": "js/renderer.js",
            "line": 76,
            "description": "Size of each tile is drawn.",
            "itemtype": "property",
            "name": "tileSize",
            "type": "Number",
            "class": "Color operations.Renderer",
            "namespace": "Color operations"
        },
        {
            "file": "js/renderer.js",
            "line": 83,
            "description": "Font used to render tile characters.",
            "itemtype": "property",
            "name": "font",
            "type": "String",
            "class": "Color operations.Renderer",
            "namespace": "Color operations"
        },
        {
            "file": "js/renderer.js",
            "line": 90,
            "description": "Map view width in tiles.",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "class": "Color operations.Renderer",
            "namespace": "Color operations"
        },
        {
            "file": "js/renderer.js",
            "line": 97,
            "description": "Map view height in tiles.",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "class": "Color operations.Renderer",
            "namespace": "Color operations"
        },
        {
            "file": "js/renderer.js",
            "line": 104,
            "description": "Distance in tiles from center to upper left corner of map view on the x axis.",
            "itemtype": "property",
            "name": "offsetX",
            "type": "Number",
            "class": "Color operations.Renderer",
            "namespace": "Color operations"
        },
        {
            "file": "js/renderer.js",
            "line": 111,
            "description": "Distance in tiles from center to upper left corner of map view on the y axis.",
            "itemtype": "property",
            "name": "offsetY",
            "type": "Number",
            "class": "Color operations.Renderer",
            "namespace": "Color operations"
        },
        {
            "file": "js/renderer.js",
            "line": 118,
            "description": "The map coord of the tile drawn in the upper left corner of the map view on the x axis.",
            "itemtype": "property",
            "name": "originX",
            "type": "Number",
            "class": "Color operations.Renderer",
            "namespace": "Color operations"
        },
        {
            "file": "js/renderer.js",
            "line": 125,
            "description": "The map coord of the tile drawn in the upper left corner of the map view on the y axis.",
            "itemtype": "property",
            "name": "originY",
            "type": "Number",
            "class": "Color operations.Renderer",
            "namespace": "Color operations"
        },
        {
            "file": "js/renderer.js",
            "line": 132,
            "description": "The map coord of the tile currently being hovered by the mouse on the x axis.",
            "itemtype": "property",
            "name": "hoveredTileX",
            "type": "Number|Null",
            "class": "Color operations.Renderer",
            "namespace": "Color operations"
        },
        {
            "file": "js/renderer.js",
            "line": 139,
            "description": "The map coord of the tile currently being hovered by the mouse on the y axis.",
            "itemtype": "property",
            "name": "hoveredTileY",
            "type": "Number|Null",
            "class": "Color operations.Renderer",
            "namespace": "Color operations"
        },
        {
            "file": "js/renderer.js",
            "line": 146,
            "description": "Resizes canvas elements to match the tileSize and map view with/height. Also adjusts behavior to accomodate high pixel density screens.",
            "itemtype": "method",
            "name": "resize",
            "class": "Color operations.Renderer",
            "namespace": "Color operations"
        },
        {
            "file": "js/renderer.js",
            "line": 189,
            "description": "Converts mouse pixel coords to map tile coords. Mouse pixel coords must be relative to the current window.",
            "itemtype": "method",
            "name": "mouseToTileCoords",
            "params": [
                {
                    "name": "x",
                    "description": "- Mouse pixel coord on the x axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- Mouse pixel coord on the y axis.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Tile|False"
            },
            "class": "Color operations.Renderer",
            "namespace": "Color operations"
        },
        {
            "file": "js/renderer.js",
            "line": 204,
            "description": "Converts map view pixel coords to map tile coords. Map view pixel coords are relative to the top left of the canvas element.",
            "itemtype": "method",
            "name": "pixelToTileCoords",
            "params": [
                {
                    "name": "x",
                    "description": "- Map view pixel coord on the x axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- Map view pixel coord on the y axis.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Tile|False"
            },
            "class": "Color operations.Renderer",
            "namespace": "Color operations"
        },
        {
            "file": "js/renderer.js",
            "line": 223,
            "description": "Draws the current game state to the map view.",
            "itemtype": "method",
            "name": "draw",
            "class": "Color operations.Renderer",
            "namespace": "Color operations"
        },
        {
            "file": "js/renderer.js",
            "line": 322,
            "description": "Draws a single tile to the map view.",
            "itemtype": "method",
            "name": "drawTile",
            "params": [
                {
                    "name": "x",
                    "description": "- Map tile coord on the x axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- Map tile coord on the y axis.",
                    "type": "Number"
                },
                {
                    "name": "tileData",
                    "description": "- Object containing tile draw settings.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "char",
                            "description": "- The character to draw.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "color",
                            "description": "- The color of the character displayed.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "bgColor",
                            "description": "- The background color of the tile.",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "ctx",
                    "description": "- The canvas context to draw to.",
                    "type": "CanvasRenderingContext2D",
                    "optional": true,
                    "optdefault": "this.bufferCtx"
                }
            ],
            "class": "Color operations.Renderer",
            "namespace": "Color operations"
        },
        {
            "file": "js/tile.js",
            "line": 34,
            "description": "Game instance this obj is attached to.",
            "itemtype": "property",
            "name": "game",
            "type": "Game",
            "class": "Color operations.Tile",
            "namespace": "Color operations"
        },
        {
            "file": "js/tile.js",
            "line": 42,
            "description": "The type of entity this is.\nWhen created this object is merged with the value of Tile.Types[type].",
            "itemtype": "property",
            "name": "type",
            "type": "Object",
            "class": "Color operations.Tile",
            "namespace": "Color operations"
        },
        {
            "file": "js/tile.js",
            "line": 50,
            "description": "If this tile has been explored by the player.",
            "itemtype": "property",
            "name": "explored",
            "type": "Bool",
            "class": "Color operations.Tile",
            "namespace": "Color operations"
        },
        {
            "file": "js/tile.js",
            "line": 57,
            "description": "If entities can move through this tile.",
            "itemtype": "property",
            "name": "passable",
            "type": "Bool",
            "class": "Color operations.Tile",
            "namespace": "Color operations"
        },
        {
            "file": "js/tile.js",
            "line": 64,
            "description": "If this tile blocks line of sight.",
            "itemtype": "property",
            "name": "passable",
            "type": "Bool",
            "class": "Color operations.Tile",
            "namespace": "Color operations"
        },
        {
            "file": "js/tile.js",
            "line": 71,
            "description": "The tile map coordinate position on the x axis.",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Color operations.Tile",
            "namespace": "Color operations"
        },
        {
            "file": "js/tile.js",
            "line": 78,
            "description": "The tile map coordinate position on the y axis.",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Color operations.Tile",
            "namespace": "Color operations"
        },
        {
            "file": "js/tile.js",
            "line": 85,
            "description": "The character displayed when rendering this tile.",
            "itemtype": "property",
            "name": "char",
            "type": "String",
            "class": "Color operations.Tile",
            "namespace": "Color operations"
        },
        {
            "file": "js/tile.js",
            "line": 92,
            "description": "The color of the character displayed when rendering this tile. Not rendered if false.",
            "itemtype": "property",
            "name": "color",
            "type": "String|bool",
            "class": "Color operations.Tile",
            "namespace": "Color operations"
        },
        {
            "file": "js/tile.js",
            "line": 99,
            "description": "The background color the character displayed when rendering this tile. Not rendered if false.",
            "itemtype": "property",
            "name": "bgColor",
            "type": "String|bool",
            "class": "Color operations.Tile",
            "namespace": "Color operations"
        },
        {
            "file": "js/tile.js",
            "line": 106,
            "description": "Handles the behavior of a player or other entity attempting to move into this tile. Only used if this.passable = false.",
            "itemtype": "method",
            "name": "bump",
            "params": [
                {
                    "name": "entity",
                    "description": "- The player or entity attemplting to move into this tile.",
                    "type": "Object"
                }
            ],
            "class": "Color operations.Tile",
            "namespace": "Color operations"
        },
        {
            "file": "js/util.js",
            "line": 11,
            "description": "Merges settings with default values.",
            "itemtype": "method",
            "name": "merge",
            "params": [
                {
                    "name": "defaults",
                    "description": "- Default values to merge with.",
                    "type": "Object"
                },
                {
                    "name": "settings",
                    "description": "- Settings to merge with default values.",
                    "type": "Object"
                }
            ],
            "class": "Color operations.Util",
            "namespace": "Color operations"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:9"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:532"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:552"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:560"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:572"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:580"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:785"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:793"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:801"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:811"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:821"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:861"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:1255"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:1281"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:1293"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:1304"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:1320"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:1327"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:1349"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:1413"
        },
        {
            "message": "param name missing: {string}",
            "line": " js/vendor/rot.js:1468"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:1468"
        },
        {
            "message": "param name missing: {string[]}",
            "line": " js/vendor/rot.js:1476"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:1476"
        },
        {
            "message": "param name missing: {string[]}",
            "line": " js/vendor/rot.js:1497"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:1497"
        },
        {
            "message": "param name missing: {string[]}",
            "line": " js/vendor/rot.js:1518"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:1518"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:1558"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:1591"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:1607"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:1662"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:1678"
        },
        {
            "message": "replacing incorrect tag: augments with uses",
            "line": " js/vendor/rot.js:1686"
        },
        {
            "message": "replacing incorrect tag: augments with uses",
            "line": " js/vendor/rot.js:1712"
        },
        {
            "message": "replacing incorrect tag: augments with uses",
            "line": " js/vendor/rot.js:1740"
        },
        {
            "message": "replacing incorrect tag: augments with uses",
            "line": " js/vendor/rot.js:1853"
        },
        {
            "message": "replacing incorrect tag: augments with uses",
            "line": " js/vendor/rot.js:1873"
        },
        {
            "message": "replacing incorrect tag: augments with uses",
            "line": " js/vendor/rot.js:1981"
        },
        {
            "message": "replacing incorrect tag: augments with uses",
            "line": " js/vendor/rot.js:2082"
        },
        {
            "message": "replacing incorrect tag: augments with uses",
            "line": " js/vendor/rot.js:2177"
        },
        {
            "message": "replacing incorrect tag: augments with uses",
            "line": " js/vendor/rot.js:2446"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:2457"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:2465"
        },
        {
            "message": "replacing incorrect tag: augments with uses",
            "line": " js/vendor/rot.js:2472"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:2626"
        },
        {
            "message": "replacing incorrect tag: augments with uses",
            "line": " js/vendor/rot.js:2706"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:2798"
        },
        {
            "message": "replacing incorrect tag: augments with uses",
            "line": " js/vendor/rot.js:3037"
        },
        {
            "message": "replacing incorrect tag: augments with uses",
            "line": " js/vendor/rot.js:3480"
        },
        {
            "message": "param name missing: {function}",
            "line": " js/vendor/rot.js:3581"
        },
        {
            "message": "replacing incorrect tag: augments with uses",
            "line": " js/vendor/rot.js:3682"
        },
        {
            "message": "replacing incorrect tag: augments with uses",
            "line": " js/vendor/rot.js:4007"
        },
        {
            "message": "replacing incorrect tag: augments with uses",
            "line": " js/vendor/rot.js:4115"
        },
        {
            "message": "replacing incorrect tag: augments with uses",
            "line": " js/vendor/rot.js:4238"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:4426"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:4442"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:4457"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:4474"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:4490"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:4506"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:4523"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:4538"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:4567"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:4890"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/vendor/rot.js:4961"
        },
        {
            "message": "replacing incorrect tag: augments with uses",
            "line": " js/vendor/rot.js:5038"
        },
        {
            "message": "replacing incorrect tag: augments with uses",
            "line": " js/vendor/rot.js:5098"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/array-2d.js:80"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/array-2d.js:103"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/array-2d.js:179"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/array-2d.js:237"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/array-2d.js:292"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/entity-manager.js:42"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/input.js:64"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/input.js:77"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/renderer.js:189"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/renderer.js:204"
        },
        {
            "message": "Missing item type\nHiDPI Canvas Polyfill (1.0.9)\n\nAuthor: Jonathan D. Johnson (http://jondavidjohn.com)\nHomepage: https://github.com/jondavidjohn/hidpi-canvas-polyfill\nIssue Tracker: https://github.com/jondavidjohn/hidpi-canvas-polyfill/issues\nLicense: Apache 2.0",
            "line": " js/vendor/hidpi-canvas.min.js:1"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:5"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:9"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:16"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:18"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:21"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:49"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:51"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:53"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:55"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:57"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:59"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:61"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:63"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:65"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:67"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:69"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:71"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:73"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:75"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:77"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:79"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:81"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:83"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:85"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:87"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:89"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:91"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:93"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:95"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:97"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:99"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:101"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:103"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:105"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:107"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:109"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:111"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:113"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:115"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:117"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:119"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:121"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:123"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:125"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:127"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:129"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:131"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:133"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:135"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:137"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:139"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:141"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:143"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:145"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:147"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:149"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:151"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:153"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:155"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:157"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:159"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:161"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:163"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:165"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:167"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:169"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:171"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:173"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:175"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:177"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:179"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:181"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:183"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:185"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:187"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:189"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:191"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:193"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:195"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:197"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:199"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:201"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:203"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:205"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:207"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:209"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:211"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:213"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:215"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:217"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:219"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:221"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:223"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:225"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:227"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:229"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:231"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:233"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:235"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:237"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:239"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:241"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:243"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:245"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:247"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:249"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:251"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:253"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:255"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:257"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:259"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:261"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:263"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:265"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:267"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:269"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:271"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:273"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:275"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:277"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:279"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:281"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:283"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:285"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:287"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:289"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:293"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:295"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:297"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:299"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:301"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:303"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:305"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:307"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:309"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:311"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:313"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:315"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:317"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:319"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:321"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:323"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:325"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:327"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:329"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:331"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:333"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:335"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:337"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:339"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:341"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:343"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:345"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:347"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:349"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:351"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:353"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:355"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:358"
        },
        {
            "message": "Missing item type\nMeasure size of a resulting text block",
            "line": " js/vendor/rot.js:371"
        },
        {
            "message": "Missing item type\nConvert string to a series of a formatting commands",
            "line": " js/vendor/rot.js:398"
        },
        {
            "message": "Missing item type\nCreate new tokens and insert them into the stream",
            "line": " js/vendor/rot.js:532"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:552"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:560"
        },
        {
            "message": "Missing item type\nAlways positive modulus",
            "line": " js/vendor/rot.js:572"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:580"
        },
        {
            "message": "Missing item type\nLeft pad",
            "line": " js/vendor/rot.js:587"
        },
        {
            "message": "Missing item type\nRight pad",
            "line": " js/vendor/rot.js:602"
        },
        {
            "message": "Missing item type\nFormat a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.",
            "line": " js/vendor/rot.js:617"
        },
        {
            "message": "Missing item type\nConvenience shortcut to String.format(this)",
            "line": " js/vendor/rot.js:652"
        },
        {
            "message": "Missing item type\nES5 Object.create",
            "line": " js/vendor/rot.js:662"
        },
        {
            "message": "Missing item type\nSets prototype of this function to an instance of parent function",
            "line": " js/vendor/rot.js:671"
        },
        {
            "message": "Missing item type\nDebug helper, ideal as a map generator callback. Always bound to this.",
            "line": " js/vendor/rot.js:745"
        },
        {
            "message": "Missing item type\nClear the whole display (cover it with background color)",
            "line": " js/vendor/rot.js:756"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:764"
        },
        {
            "message": "Missing item type\nReturns currently set options",
            "line": " js/vendor/rot.js:785"
        },
        {
            "message": "Missing item type\nReturns the DOM node of this display",
            "line": " js/vendor/rot.js:793"
        },
        {
            "message": "Missing item type\nCompute the maximum width/height to fit into a set of given constraints",
            "line": " js/vendor/rot.js:801"
        },
        {
            "message": "Missing item type\nCompute the maximum font size to fit into a set of given constraints",
            "line": " js/vendor/rot.js:811"
        },
        {
            "message": "Missing item type\nConvert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.",
            "line": " js/vendor/rot.js:821"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:844"
        },
        {
            "message": "Missing item type\nDraws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.",
            "line": " js/vendor/rot.js:861"
        },
        {
            "message": "Missing item type\nTimer tick: update dirty parts",
            "line": " js/vendor/rot.js:907"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:932"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:1249"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:1255"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:1262"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:1281"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:1293"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:1304"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:1320"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:1327"
        },
        {
            "message": "Missing item type\nGet RNG state. Useful for storing the state and re-setting it via setState.",
            "line": " js/vendor/rot.js:1349"
        },
        {
            "message": "Missing item type\nSet a previously retrieved state.",
            "line": " js/vendor/rot.js:1357"
        },
        {
            "message": "Missing item type\nRemove all learning data",
            "line": " js/vendor/rot.js:1405"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:1413"
        },
        {
            "message": "Missing item type\nObserve (learn) a string from a training set",
            "line": " js/vendor/rot.js:1424"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:1468"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:1476"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:1484"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:1497"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:1518"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:1558"
        },
        {
            "message": "Missing item type\nClear all scheduled events",
            "line": " js/vendor/rot.js:1565"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:1574"
        },
        {
            "message": "Missing item type\nLocates the nearest event, advances time if necessary. Returns that event and removes it from the queue.",
            "line": " js/vendor/rot.js:1591"
        },
        {
            "message": "Missing item type\nRemove an event from the queue",
            "line": " js/vendor/rot.js:1607"
        },
        {
            "message": "Missing item type\nRemove an event from the queue",
            "line": " js/vendor/rot.js:1619"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:1636"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:1643"
        },
        {
            "message": "Missing item type\nClear all items",
            "line": " js/vendor/rot.js:1652"
        },
        {
            "message": "Missing item type\nRemove a previously added item",
            "line": " js/vendor/rot.js:1662"
        },
        {
            "message": "Missing item type\nSchedule next item",
            "line": " js/vendor/rot.js:1678"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:1695"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:1703"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:1721"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:1731"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:1751"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:1772"
        },
        {
            "message": "Missing item type\nSet duration for the active item",
            "line": " js/vendor/rot.js:1783"
        },
        {
            "message": "Missing item type\nStart the main loop. When this call returns, the loop is locked.",
            "line": " js/vendor/rot.js:1799"
        },
        {
            "message": "Missing item type\nInterrupt the engine by an asynchronous action",
            "line": " js/vendor/rot.js:1806"
        },
        {
            "message": "Missing item type\nResume execution (paused by a previous lock)",
            "line": " js/vendor/rot.js:1814"
        },
        {
            "message": "Missing item type\nRemove \"i\" from its list",
            "line": " js/vendor/rot.js:2158"
        },
        {
            "message": "Missing item type\nJoin lists with \"i\" and \"i+1\"",
            "line": " js/vendor/rot.js:2168"
        },
        {
            "message": "Missing item type\nFill the map with random values",
            "line": " js/vendor/rot.js:2202"
        },
        {
            "message": "Missing item type\nChange options.",
            "line": " js/vendor/rot.js:2215"
        },
        {
            "message": "Missing item type\nGet neighbor count at [i,j] in this._map",
            "line": " js/vendor/rot.js:2270"
        },
        {
            "message": "Missing item type\nMake sure every non-wall space is accessible.",
            "line": " js/vendor/rot.js:2287"
        },
        {
            "message": "Missing item type\nFind random points to connect. Search for the closest point in the larger space. \nThis is to minimize the length of the passage while maintaining good performance.",
            "line": " js/vendor/rot.js:2338"
        },
        {
            "message": "Missing item type\nGet all generated rooms",
            "line": " js/vendor/rot.js:2457"
        },
        {
            "message": "Missing item type\nGet all generated corridors",
            "line": " js/vendor/rot.js:2465"
        },
        {
            "message": "Missing item type\nCreate a map",
            "line": " js/vendor/rot.js:2504"
        },
        {
            "message": "Missing item type\nGet a suitable wall",
            "line": " js/vendor/rot.js:2602"
        },
        {
            "message": "Missing item type\nTries adding a feature",
            "line": " js/vendor/rot.js:2626"
        },
        {
            "message": "Missing item type\nReturns vector in \"digging\" direction, or false, if this does not exist (or is not unique)",
            "line": " js/vendor/rot.js:2666"
        },
        {
            "message": "Missing item type\nFind empty spaces surrounding rooms, and apply doors.",
            "line": " js/vendor/rot.js:2692"
        },
        {
            "message": "Missing item type\nCreate a map. If the time limit has been hit, returns null.",
            "line": " js/vendor/rot.js:2733"
        },
        {
            "message": "Missing item type\nGenerates a suitable amount of rooms",
            "line": " js/vendor/rot.js:2763"
        },
        {
            "message": "Missing item type\nTry to generate one room",
            "line": " js/vendor/rot.js:2778"
        },
        {
            "message": "Missing item type\nGenerates connectors beween rooms",
            "line": " js/vendor/rot.js:2798"
        },
        {
            "message": "Missing item type\nFor a given room, find the closest one from the list",
            "line": " js/vendor/rot.js:2839"
        },
        {
            "message": "Missing item type\nDig a polyline.",
            "line": " js/vendor/rot.js:3009"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:3075"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:3368"
        },
        {
            "message": "Missing item type\nRoom of random size, with a given doors and direction",
            "line": " js/vendor/rot.js:3500"
        },
        {
            "message": "Missing item type\nRoom of random size, positioned around center coords",
            "line": " js/vendor/rot.js:3533"
        },
        {
            "message": "Missing item type\nRoom of random size within a given dimensions",
            "line": " js/vendor/rot.js:3553"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:3581"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:3638"
        },
        {
            "message": "Missing item type\nIf the length degenerated, this corridor might be invalid",
            "line": " js/vendor/rot.js:3740"
        },
        {
            "message": "Missing item type\nWe do not want the corridor to crash into a corner of a room;\nif any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n\nSituation:\n#######1\n.......?\n#######2\n\nThe corridor was dug from left to right.\n1, 2 - problematic corners, ? = N+1th cell (not dug)",
            "line": " js/vendor/rot.js:3750"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:3770"
        },
        {
            "message": "Missing item type\nA simple 2d implementation of simplex noise by Ondrej Zara\n\nBased on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\nWhich is based on example code by Stefan Gustavson (stegu@itn.liu.se).\nWith Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\nBetter rank ordering method by Stefan Gustavson in 2012.",
            "line": " js/vendor/rot.js:3817"
        },
        {
            "message": "Missing item type\nCompute visibility for a 360-degree circle",
            "line": " js/vendor/rot.js:3947"
        },
        {
            "message": "Missing item type\nReturn all neighbors in a concentric ring",
            "line": " js/vendor/rot.js:3956"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:4016"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:4054"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:4124"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:4161"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:4249"
        },
        {
            "message": "Missing item type\nCompute visibility for a 360-degree circle",
            "line": " js/vendor/rot.js:4261"
        },
        {
            "message": "Missing item type\nCompute visibility for a 180-degree arc",
            "line": " js/vendor/rot.js:4276"
        },
        {
            "message": "Missing item type\nCompute visibility for a 90-degree arc",
            "line": " js/vendor/rot.js:4296"
        },
        {
            "message": "Missing item type\nRender one octant (45-degree arc) of the viewshed",
            "line": " js/vendor/rot.js:4312"
        },
        {
            "message": "Missing item type\nActually calculates the visibility",
            "line": " js/vendor/rot.js:4325"
        },
        {
            "message": "Missing item type",
            "line": " js/vendor/rot.js:4392"
        },
        {
            "message": "Missing item type\nAdd two or more colors",
            "line": " js/vendor/rot.js:4426"
        },
        {
            "message": "Missing item type\nAdd two or more colors, MODIFIES FIRST ARGUMENT",
            "line": " js/vendor/rot.js:4442"
        },
        {
            "message": "Missing item type\nMultiply (mix) two or more colors",
            "line": " js/vendor/rot.js:4457"
        },
        {
            "message": "Missing item type\nMultiply (mix) two or more colors, MODIFIES FIRST ARGUMENT",
            "line": " js/vendor/rot.js:4474"
        },
        {
            "message": "Missing item type\nInterpolate (blend) two colors with a given factor",
            "line": " js/vendor/rot.js:4490"
        },
        {
            "message": "Missing item type\nInterpolate (blend) two colors with a given factor in HSL mode",
            "line": " js/vendor/rot.js:4506"
        },
        {
            "message": "Missing item type\nCreate a new random color based on this one",
            "line": " js/vendor/rot.js:4523"
        },
        {
            "message": "Missing item type\nConverts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.",
            "line": " js/vendor/rot.js:4538"
        },
        {
            "message": "Missing item type\nConverts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.",
            "line": " js/vendor/rot.js:4567"
        },
        {
            "message": "Missing item type\nAdjust options at runtime",
            "line": " js/vendor/rot.js:4793"
        },
        {
            "message": "Missing item type\nSet the used Field-Of-View algo",
            "line": " js/vendor/rot.js:4804"
        },
        {
            "message": "Missing item type\nSet (or remove) a light source",
            "line": " js/vendor/rot.js:4814"
        },
        {
            "message": "Missing item type\nReset the pre-computed topology values. Call whenever the underlying map changes its light-passability.",
            "line": " js/vendor/rot.js:4831"
        },
        {
            "message": "Missing item type\nCompute the lighting",
            "line": " js/vendor/rot.js:4841"
        },
        {
            "message": "Missing item type\nCompute one iteration from all emitting cells",
            "line": " js/vendor/rot.js:4873"
        },
        {
            "message": "Missing item type\nPrepare a list of emitters for next pass",
            "line": " js/vendor/rot.js:4890"
        },
        {
            "message": "Missing item type\nCompute one iteration from one cell",
            "line": " js/vendor/rot.js:4930"
        },
        {
            "message": "Missing item type\nCompute FOV (\"form factor\") for a potential light source at [x,y]",
            "line": " js/vendor/rot.js:4961"
        },
        {
            "message": "Missing item type\nCompute a path from a given point",
            "line": " js/vendor/rot.js:5016"
        },
        {
            "message": "Missing item type\nCompute a path from a given point",
            "line": " js/vendor/rot.js:5052"
        },
        {
            "message": "Missing item type\nCompute a non-cached value",
            "line": " js/vendor/rot.js:5068"
        },
        {
            "message": "Missing item type\nCompute a path from a given point",
            "line": " js/vendor/rot.js:5113"
        }
    ]
}