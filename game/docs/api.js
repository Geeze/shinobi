YUI.add("yuidoc-meta", function(Y) {
   Y.YUIDoc = { meta: {
    "classes": [
        "Color operations.Abstract pathfinder",
        "Color operations.Array2d",
        "Color operations.Console",
        "Color operations.Entity",
        "Color operations.Entity.Types",
        "Color operations.EntityManager",
        "Color operations.Fov",
        "Color operations.Game",
        "Color operations.Input",
        "Color operations.Lighting",
        "Color operations.Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.",
        "Color operations.Mouse",
        "Color operations.Player",
        "Color operations.Recursive shadowcasting algorithm\nCurrently only supports 4/8 topologies, not hexagonal.\nBased on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting",
        "Color operations.Renderer",
        "Color operations.Simplified A* algorithm: all edges have a value of 1",
        "Color operations.Simplified Dijkstra's algorithm: all edges have a value of 1",
        "Color operations.Tile",
        "Color operations.Tile.Types",
        "Color operations.Util",
        "Contains text tokenization and breaking routines.Abstract display backend module",
        "Contains text tokenization and breaking routines.Hexagonal backend",
        "Contains text tokenization and breaking routines.Rectangular backend",
        "Contains text tokenization and breaking routines.Visual map display",
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..(Markov process)-based string generator. \nCopied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>. \nOffers configurable order and prior.",
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..2D simplex noise generator",
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Abstract FOV algorithm",
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Abstract scheduler",
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Action-based scheduler",
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Asynchronous main loop",
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Base map generator",
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Cellular automaton map generator",
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Corridor",
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.",
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Dungeon feature; has own .create() method",
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.",
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php",
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Dungeon map: has rooms and corridors",
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Generic event queue: stores events and retrieves them based on their time",
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Icey's Maze generator\nSee http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation",
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Maze generator - Eller's algorithm\nSee http://homepages.cwi.nl/~tromp/maze.html for explanation",
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Precise shadowcasting algorithm",
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Random dungeon generator using human-like digging patterns.\nHeavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at \nhttp://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.",
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method",
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Room",
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Simple empty rectangular room",
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Simple fair scheduler (round-robin style)",
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Speed-based scheduler",
        "This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\nAlea is licensed according to the http://en.wikipedia.org/wiki/MIT_License..Tile backend"
    ],
    "modules": [],
    "allModules": []
} };
});